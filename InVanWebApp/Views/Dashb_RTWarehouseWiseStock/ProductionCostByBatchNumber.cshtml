@model InVanWebApp_BO.ProductionMaterialIssueNoteBO
@{ ViewBag.Title = "Production Cost Batch Wise";
    Layout = "~/Views/Shared/MainMaster.cshtml"; }

<!DOCTYPE html>

<html>
<head>
    <title>Production Cost Batch Wise</title>
    <style>
        table {
            border-spacing: 0px;
            margin-left: auto;
            margin-right: auto;
        }

        td {
            word-break: break-all;
        }
    </style>
</head>
<body>
    <div class="content-wrapper" runat="server" id="divPanel1">
        <div class="page-header" style="height:5px;">
            <h4 class="page-title">Production Cost Batch Wise</h4>
            <nav aria-label="breadcrum">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        @*Rahul updated anchor tag text 'Dashboard' to 'Home' 16-02-23.*@
                        <i class="fa fa-home"></i>&nbsp;<a href="@Url.Action("ReorderPointOfStocks","Dashb_RTWarehouseWiseStock")">Home</a>
                    </li>
                    <li class="breadcrumb-item active">Production Cost Batch Wise</li>
                </ol>
            </nav>
        </div>
        <hr />
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-2">
                                    <label>From Date:</label>
                                    <span style="color:red">*</span>
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("fromDate", "{0:yyyy-MM-dd}", new { @id = "fromDate", @class = "datepicker form-control form-control-sm", @type = "date", onchange = "OnChangedFromDate()", @max = DateTime.Now.ToString("yyyy-MM-dd") })
                                    @Html.ValidationMessage("msgfromDate", "", new { id = "fromDateValidate", @class = "col-form-label error mt-2 text-danger" })
                                </div>
                                <div class="col-md-2">
                                    <label>To Date:</label>
                                    <span style="color:red">*</span>
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("toDate", "{0:yyyy-MM-dd}", new { @id = "toDate", @class = " datepicker form-control form-control-sm", @type = "date", onchange = "OnChangedToDate()", @max = DateTime.Now.ToString("yyyy-MM-dd") })
                                    @Html.ValidationMessage("toDate", "", new { id = "toDateValidate", @class = "col-form-label error mt-2 text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.Label("Sales Order Number")
                                    <span style="color:red">*</span>
                                </div>
                                <div class="col-md-3">
                                    @Html.DropDownListFor(model => model.SalesOrderId, (IEnumerable<SelectListItem>)ViewData["SONumbers"], "---Select---", new { @class = "form-control", onchange = "SelectedIndexChangedSONumber($(this).val())" })
                                    @Html.HiddenFor(model => model.SONumber)
                                    @Html.ValidationMessageFor(model => model.SalesOrderId, "", new { id = "SOIDValidate", @class = "error mt-2 text-danger" })
                                </div>
                                <div class="col-md-2">
                                    @Html.Label("Batch No")
                                    <span style="color:red">*</span>
                                </div>
                                <div class="col-md-3">
                                    @*<select id="BatchNo" name="BatchNo" class="form-control form-control-sm" onchange="SelectedIndexChangedBatchNo($(this).val())">*@
                                    <select id="BatchNo" name="BatchNo" class="form-control form-control-sm">
                                        <option>--All--</option>
                                    </select>
                                    <span id="valMsgBatchNo" style="display:none;" class="error mt-2 text-danger field-validation-error">Select Batch Number!</span>
                                    @*@Html.HiddenFor(model => model.ID)*@
                                    @Html.ValidationMessageFor(model => model.BatchNumber, "", new { id = "valMsgBatchNo", @class = "error mt-2 text-danger" })
                                </div>

                                <div class="col-md-2">
                                    <button id="btnGo" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b);float:left;">Go</button>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-12">
                                    <div id="mainTPCost" style="width:100%;"></div>
                                    <div id="NoDataFound" style="display:none;"><center>No Data Found</center></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>

<script src="~/Highcharts-10.3.1/code/highcharts.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/export-data.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/exporting.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/accessibility.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/offline-exporting.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/data.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/accessibility.js"></script>

<script type="text/javascript">

    function getRandomColor() {
        var Letters = '0123456789ABCDEF';
        var Color = '#';
        for (var i = 0; i < 6; i++) {
            Color += Letters[Math.floor(Math.random() * 16)];
        }
        return Color;
    }

    function OnChangedFromDate() {
        $('#fromDateValidate').hide();
    }

    function OnChangedToDate() {
        $('#toDateValidate').hide();
    }
    //function SelectedIndexChangedBatchNo(id) {
    //    $('#valMsgBatchNo').hide();
    //}
    function SelectedIndexChangedSONumber(id) {
        $('#SOIDValidate').hide();
        var SOId = $('#SalesOrderId').val();

        $.ajax({
            url: '/Dashb_RTWarehouseWiseStock/BatchNumber?SId=' + SOId,
            type: "POST",
            data: {},
            success: function (result) {
                var count = result.length;
                var i = 0;
                $("#BatchNo option").remove();
                $("#BatchNo").append($("<option></option>").val('').html('--All--'));
                while (i < count) {
                    $("#BatchNo").append($("<option></option>").val(result[i].BatchNumber).html(result[i].BatchNumber));
                    i++;
                }
            },
            error: function (err) {
                $("#mainTPCost").hide();
                $("#NoDataFound").show();
                alert('Not able to fetch batch number!');

            }
        });
    }

    $(document).ready(function () {
        $('#toDateValidate').hide();
        $('#fromDateValidate').hide();
        $('#SOIDValidate').hide();
        $('#valMsgBatchNo').hide();

        var date = new Date();

        var day = date.getDate(),
            month = date.getMonth() + 1,
            year = date.getFullYear(),

            month = (month < 10 ? "0" : "") + month;
        day = (day < 10 ? "0" : "") + day;


        var today = year + "-" + month + "-" + day;

        document.getElementById('toDate').value = today;
        document.getElementById('fromDate').value = "2022-03-01";
        $(".spinner-wrapper").fadeIn("slow");

        population = [];
        xAxisData = [];
        var coloR = [];

        function convertDhms(h, m, s) {
            h <= 0 ? h = 1 : h = h * 60 * 60 * 1000;
            m <= 0 ? m = 1 : m = m * 60 * 1000;
            s <= 0 ? s = 1 : s = s * 1000;
            return h + m + s;
        }

        var request = $.ajax({
            url: "/Dashb_RTWarehouseWiseStock/GetDashboardProductionCostByBatchNumber",
            contentType: 'application/json;',
            dataType: 'json',
            type: "POST",
            success: function (result) {
                ond = result;
                var parsed = $.parseJSON(result);
                var dataLength = parsed.length;

                var serial2 = {
                    name: "ProductName",
                    type: 'column',
                    yAxis: 1,
                    data: [],
                    color: [],
                    tooltip: {
                        valueSuffix: ' INR'
                    }

                };
                var serialForBatchNumber = {
                    name: "BatchNumber",
                    type: 'spline',
                    data: [],
                    color: 'black',
                    tooltip: {
                        valueSuffix: ' INR'
                    }

                };

                $.each(parsed, function (i, jsondata) {

                    var dynamicColors = function () {
                        var r = Math.floor(Math.random() * 255);
                        var g = Math.floor(Math.random() * 255);
                        var b = Math.floor(Math.random() * 255);
                        return "rgb(" + r + "," + g + "," + b + ")";
                    }

                    var serial = new Array(i, parseFloat(jsondata[i])); //serialized array with province and population values
                    if (jsondata.Item_Name != null) {
                        serial2.data.push(parseFloat(jsondata.Item_Name));
                    } else {
                        serial2.data.push(parseFloat(0));
                    }
                    //FN
                    if (jsondata.BatchNumber != null) {
                        serialForBatchNumber.data.push(parseFloat(jsondata.BatchNumber));
                    } else {
                        serialForBatchNumber.data.push(parseFloat(0));
                    }

                    coloR.push(dynamicColors());
                    serial2.color = getRandomColor();
                    xAxisData.push(jsondata.WorkOrderNumber + ' (' + jsondata.ItemUnitPrice + ' ' + jsondata.ProductionMaterialIssueNoteNo + ')');

                });

                var finalSeries = [serial2, serialForBatchNumber];

                Highcharts.chart('mainTPCost', {
                    chart: {
                        zoomType: 'xy'
                    },
                    title: {
                        text: 'Total Production of Cost'
                    },
                    xAxis: {
                        categories: xAxisData,
                        crosshair: true
                    },
                    yAxis: [{ // Primary yAxis
                        labels: {
                            format: '{value} INR',
                            style: {
                                fontWeight: 'bold',
                                color: 'Balck'
                            }
                        },
                        title: {
                            text: 'Minimum Stock Value (INR)',
                            style: {
                                fontWeight: 'bold',
                                color: 'Balck'
                            }
                        }
                    }, { // Secondary yAxis
                        title: {
                            text: 'Quantity (INR)',
                            style: {
                                fontWeight: 'bold',
                                color: 'Black'
                            }
                        },
                        labels: {
                            format: '{value} INR',
                            style: {
                                fontWeight: 'bold',
                                color: 'Balck'
                            }
                        },
                        opposite: true
                    }],
                    tooltip: {
                        shared: true
                    },
                    series: finalSeries
                });

                if (dataLength > 0) {
                    $("#mainTPCost").show();
                    $("#NoDataFound").hide();
                } else {
                    $("#mainTPCost").hide();
                    $("#NoDataFound").show();

                }

            }

        });


        $(".spinner-wrapper").fadeOut("slow");

    });

    $("#btnGo").on("click", function () {


        Highcharts.setOptions({ colors: ['#333', '#392c70', '#64E572', '#6AF9C4', '#24CBE5', '#DDDF00', '#CB2326', '#FF9655', '#CB2326',] });
        var fromDate = $("#fromDate").val();
        var toDate = $("#toDate").val();
        var soNumber = $("#SalesOrderId").val();
        //    var batchNO = $("#BatchNo").val();

        if (fromDate == null || fromDate == "") {
            $('#fromDateValidate').text('Select from date!');
            $('#fromDateValidate').show();
            $("#fromDate").focus();
            return;
        }

        if (toDate == null || toDate == "") {
            $('#toDateValidate').text('Select to date!');
            $('#toDateValidate').show();
            $("#toDate").focus();
            return;
        }

        if (fromDate > toDate) {
            alert('Invalid date selection!');
            $('#fromDate').focus();
            return;
        }
        if (soNumber == null || soNumber == "") {
            $('#SOIDValidate').text('Select SO Number!');
            $('#SOIDValidate').show();
            event.preventDefault();
            return;
        }
        //if (batchNO == null || batchNO == "") {
        //    $('#valMsgBatchNo').text('Select Batch No!');
        //    $('#valMsgBatchNo').show();
        //    event.preventDefault();
        //    return;
        //}


        $(".spinner-wrapper").fadeIn("slow");
        population = [];
        xAxisData = [];
        var coloR = [];

        function convertDhms(h, m, s) {
            h <= 0 ? h = 1 : h = h * 60 * 60 * 1000;
            m <= 0 ? m = 1 : m = m * 60 * 1000;
            s <= 0 ? s = 1 : s = s * 1000;
            return h + m + s;
        }
        var Batchnumber = $('#BatchNo').val();
        //alert(Batchnumber);
        if (Batchnumber == '' || Batchnumber == null)
            Batchnumber = 0;
        /*alert(soNumber);*/
        //-----------Bind data in the graph Start-----------------------------------------------------------
        //url: '/Dashb_RTWarehouseWiseStock/BatchNumber?SId=' + SOId,
        var request = $.ajax({
            url: "/Dashb_RTWarehouseWiseStock/GetDashboardProductionCostByBatchNumber?soID=" + soNumber + "&batchNumber" + Batchnumber + "&fromDate=" + fromDate + "&toDate=" + toDate,
            contentType: 'application/json;',
            dataType: 'json',
            type: "POST",
            success: function (result) {
                ond = result;
                var parsed = $.parseJSON(result);
                var dataLength = parsed.length;

                var serial2 = {
                    name: "Raw Material Cost",
                    type: 'column',
                    yAxis: 1,
                    data: [],
                    /*color: [],*/
                    /*color: '#24CBE5',*/
                    color: {
                        linearGradient: {
                            x1: 0,
                            x2: 0,
                            y1: 0,
                            y2: 1
                        },
                        stops: [
                            [0, '#392c70'],
                            [1, '#6a005b']
                        ]
                    },
                    tooltip: {
                        valueSuffix: ' INR'
                    }
                };


                var yData = 0;
                var yTotal = 0;
                var pieColor = "";
                var serialForBatchPie = {
                    name: "Raw Material Cost",
                    type: 'pie',
                    color: Highcharts.getOptions().colors[7],
                    tooltip: {
                        valueSuffix: ' INR'
                    },
                    data: [{
                        name: namepie,
                        y: yTotal,
                        /*color: Highcharts.getOptions().colors[1],*/
                        dataLabels: {
                            enabled: true,
                            distance: -50,
                            format: '{point.total} INR',
                            style: {
                                fontSize: '10px',
                                color: 'black'
                                /*color: Highcharts.getOptions().colors[2],*/
                            }
                        }
                    }],
                    center: [20, -20],
                    size: 100,
                    innerSize: '70%',
                    showInLegend: false,
                    dataLabels: {
                        enabled: false
                    }

                };
                var PieColor = "";
                $.each(parsed, function (i, jsondata) {
                    var dynamicColors = function () {
                        var r = Math.floor(Math.random() * 255);
                        var g = Math.floor(Math.random() * 255);
                        var b = Math.floor(Math.random() * 255);
                        return "rgb(" + r + "," + g + "," + b + ")";
                    }

                    var serial = new Array(i, parseFloat(jsondata[i])); //serialized array with province and population values
                    if (jsondata.ItemUnitPrice != null) {
                        serial2.data.push(parseFloat(jsondata.ItemUnitPrice.toFixed(2)));
                        yData = parseFloat(jsondata.ItemUnitPrice);
                        yTotal = yTotal + parseFloat(jsondata.ItemUnitPrice.toFixed(2));

                    } else {
                        serial2.data.push(parseFloat(0));
                        serialForBatchPie.data.push(parseFloat(0));
                    }

                    coloR.push(dynamicColors());
                    // serial2.color = getRandomColor();
                    //pieColor  = getRandomColor();
                    //serialForBatchPie.color.push(pieColor);
                    //pieColor  = getRandomColor();
                    //serialForBatchPie.data.color.push(getRandomColor());
                    xAxisData.push(jsondata.Item_Name);

                });
                yTotal = parseFloat(yTotal.toFixed(2));
                var namepie='TotalCost'
                serialForBatchPie.data.push(namepie);
                serialForBatchPie.data.push(yTotal);
                alert(yTotal);
                var finalSeries = [serial2, serialForBatchPie];
                //Highcharts.chart('mainTPCost', {
                //    title: {
                //        text: 'Production of Cost'
                //    },
                //    chart: {
                //        zoomType: 'xy'
                //    },
                //    xAxis: {
                //        categories: xAxisData,
                //        title: {
                //            text: 'Raw Materials',
                //            style: {
                //                fontWeight: 'bold',
                //                color: 'Black'
                //            }
                //        },
                //        crosshair: true
                //    },
                //    yAxis: [
                //        { // Primary yAxis
                //            labels: {
                //                format: '{value}',
                //                style: {
                //                    fontWeight: 'bold',
                //                    color: 'Balck'
                //                }
                //            },
                //            title: {
                //                text: '',
                //                style: {
                //                    fontWeight: 'bold',
                //                    color: 'Black'
                //                }
                //            },
                //        },
                //        { // Secondary yAxis
                //            title: {
                //                text: 'Amount (INR)',
                //                style: {
                //                    fontWeight: 'bold',
                //                    color: 'Black'
                //                }
                //            },
                //            labels: {
                //                format: '{value}',
                //                style: {
                //                    fontWeight: 'bold',
                //                    color: 'Balck'
                //                }
                //            },
                //            opposite: false

                //        }],
                //    tooltip: {
                //        shared: true
                //    },
                //    series: finalSeries
                //});

                if (dataLength > 0) {
                    $("#mainTPCost").show();
                    $("#NoDataFound").hide();
                } else {
                    $("#mainTPCost").hide();
                    $("#NoDataFound").show();

                }

            }

        });
        //-----------Bind data in the graph End-------------------------------------------------------------

        $(".spinner-wrapper").fadeOut("slow");

    });

</script>