@model InVanWebApp_BO.ReportBO
@{ ViewBag.Title = "UtilityConsumptionProduction";
    Layout = "~/Views/Shared/MainMaster.cshtml"; }


@*<script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>*@

<script src="~/Highcharts-10.3.1/code/highcharts.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/export-data.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/exporting.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/accessibility.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/offline-exporting.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/data.js"></script>
<script src="~/Highcharts-10.3.1/code/modules/accessibility.js"></script>


<!DOCTYPE html>

<html>
<head>
    <title>Raw Material Consumption Vs Production</title>
    <style>
        table {
            border-spacing: 0px;
            margin-left: auto;
            margin-right: auto;
        }

        td {
            word-break: break-all;
        }
    </style>
</head>
<body>
    <div class="content-wrapper" runat="server" id="divPanel1">
        <div class="page-header" style="height:5px;">
            <h4 class="page-title">Raw Material Consumption Vs Production</h4>
            <nav aria-label="breadcrum">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <i class="fa fa-home"></i>&nbsp;<a href="@Url.Action("ReorderPointOfStocks","Dashb_RTWarehouseWiseStock")">Dashboard</a>
                    </li>
                    <li class="breadcrumb-item active">Raw Material Consumption Vs Production</li>
                </ol>
            </nav>
        </div>
        <hr />
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-2">
                                    <label>From Date:</label>
                                    <span style="color:red">*</span>
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("fromDate", "{0:yyyy-MM-dd}", new { @id = "fromDate", @class = "datepicker form-control form-control-sm", @type = "date", onchange = "OnChangedFromDate()", @max = DateTime.Now.ToString("yyyy-MM-dd") })
                                    @Html.ValidationMessage("msgfromDate", "", new { id = "fromDateValidate", @class = "col-form-label error mt-2 text-danger" })
                                </div>
                                <div class="col-md-2">
                                    <label>To Date:</label>
                                    <span style="color:red">*</span>
                                </div>
                                <div class="col-md-3">
                                    @Html.TextBox("toDate", "{0:yyyy-MM-dd}", new { @id = "toDate", @class = " datepicker form-control form-control-sm", @type = "date", onchange = "OnChangedToDate()", @max = DateTime.Now.ToString("yyyy-MM-dd") })
                                    @Html.ValidationMessage("toDate", "", new { id = "toDateValidate", @class = "col-form-label error mt-2 text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    @Html.Label("Work Order Number")
                                    @*<span style="color:red">*</span>*@
                                </div>
                                <div class="col-md-3">
                                    @Html.DropDownListFor(model => model.WorkOrderNumber, (IEnumerable<SelectListItem>)ViewData["WorkOrderDD"], "---ALL---", new { @class = "form-control", onchange = "SelectedIndexChangedWONumber($(this).val())" })
                                    @Html.HiddenFor(model => model.ID)
                                    @Html.ValidationMessageFor(model => model.WorkOrderNumber, "", new { id = "WOValidate", @class = "error mt-2 text-danger" })
                                </div>
                                <div class="col-md-2">
                                    <button id="btnGo" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b);float:left;">Go</button>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-12">
                                    <figure class="highcharts-figure">
                                        <div id="mainTPCost" style="width:100%;"></div>
                                    </figure>
                                    <div id="NoDataFound" style="display:none;"><center>No Data Found</center></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>



<style>
    @@import "https://code.highcharts.com/css/highcharts.css";

    .highcharts-figure,
    .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #ebebeb;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td,
    .highcharts-data-table th,
    .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr,
    .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }

    .highcharts-yaxis .highcharts-axis-line {
        stroke-width: 2px;
    }

    /* Link the series colors to axis colors */
    .highcharts-color-0 {
        fill: #7cb5ec;
        stroke: #7cb5ec;
    }

    .highcharts-axis.highcharts-color-0 .highcharts-axis-line {
        stroke: #7cb5ec;
    }

    .highcharts-axis.highcharts-color-0 text {
        fill: #7cb5ec;
    }

    .highcharts-color-1 {
        fill: #90ed7d;
        stroke: #90ed7d;
    }

    .highcharts-axis.highcharts-color-1 .highcharts-axis-line {
        stroke: #90ed7d;
    }

    .highcharts-axis.highcharts-color-1 text {
        fill: #90ed7d;
    }
</style>

<script type="text/javascript">

    function OnChangedFromDate() {
        $('#fromDateValidate').hide();
    }

    function OnChangedToDate() {
        $('#toDateValidate').hide();
    }

    function SelectedIndexChangedWONumber(id) {
        $('#WOValidate').hide();
    }

    $(document).ready(function () {
        $('#toDateValidate').hide();
        $('#fromDateValidate').hide();
        $('#WOValidate').hide();

        var date = new Date();

        var day = date.getDate(),
            month = date.getMonth() + 1,
            year = date.getFullYear(),

            month = (month < 10 ? "0" : "") + month;
        day = (day < 10 ? "0" : "") + day;


        var today = year + "-" + month + "-" + day;

        document.getElementById('toDate').value = today;
        document.getElementById('fromDate').value = today;
        $(".spinner-wrapper").fadeIn("slow");

        xAxisData = [];

        $(".spinner-wrapper").fadeOut("slow");



    });

    $("#btnGo").on("click", function () {
        var fromDate = $("#fromDate").val();
        var toDate = $("#toDate").val();
        var SOWOID = $("#WorkOrderNumber").val();

        if (SOWOID == '' || SOWOID == null)
            SOWOID = 0;

        if (fromDate == null || fromDate == "") {
            $('#fromDateValidate').text('Select from date!');
            $('#fromDateValidate').show();
            $("#fromDate").focus();
            return;
        }

        if (toDate == null || toDate == "") {
            $('#toDateValidate').text('Select to date!');
            $('#toDateValidate').show();
            $("#toDate").focus();
            return;
        }

        if (fromDate > toDate) {
            alert('Invalid date selection!');
            $('#fromDate').focus();
            return;
        }

        $(".spinner-wrapper").fadeIn("slow");
        xAxisData = [];

        //-----------------------------------------------------Bind data in the graph Start-----------------------------------------------------------
        var request = $.ajax({
            url: "/Dashboard/GetDashboardUtilityConsumptionProduction?SOID=" + SOWOID + "&fromDate=" + fromDate + "&toDate=" + toDate,
            contentType: 'application/json;',
            dataType: 'json',
            type: "POST",
            success: function (result) {
                ond = result;
                var parsed = $.parseJSON(result);
                var dataLength = parsed.length;

                var SerialForProQty = {
                    name: "Produced",
                    className: 'highcharts-color-0',
                    type: 'column',
                    yAxis: 1,
                    data: [],
                    /*color: [],*/
                    tooltip: {
                        valueSuffix: ' KG'
                    }

                };
                var SerialForConsumeQty = {
                    name: "Consumed",
                   
                    data: [],
                    className: 'highcharts-color-1',
                   
                    tooltip: {
                        valueSuffix: ' KG'
                    }

                };
                $.each(parsed, function (i, jsondata) {

                    if (jsondata.ConsumeQty != null) {
                        SerialForConsumeQty.data.push(parseFloat(jsondata.ConsumeQty));
                    } else {
                        SerialForConsumeQty.data.push(parseFloat(0));
                    }
                    //FN
                    if (jsondata.ProQty != null) {
                        SerialForProQty.data.push(parseFloat(jsondata.ProQty));
                    } else {
                        SerialForProQty.data.push(parseFloat(0));
                    }
                    xAxisData.push(jsondata.WorkOrderNumber);
                });

                var finalSeries = [SerialForProQty, SerialForConsumeQty];
                Highcharts.chart('mainTPCost', {
                    chart: {
                        type: 'column',
                        styledMode: true
                    },
                    title: {
                        text: 'Raw Material Consumption Vs Production',
                        align: 'center'
                    },
                    xAxis: {
                        categories: xAxisData,
                        crosshair: true
                    },
                    yAxis: [{ // Secondary yAxis
                        title: {
                            text: 'Consumed Quantity',
                            style: {
                                fontWeight: 'bold',
                                color: 'Black'
                            }
                        },
                        labels: {
                            format: '{value} KG',
                            style: {
                                fontWeight: 'bold',
                                color: 'Black'
                            }
                        },
                        opposite: true
                    },
                        { // Primary yAxis
                        labels: {
                            format: '{value} KG',
                            style: {
                                fontWeight: 'bold',
                                color: 'Black'
                            }
                        },
                        title: {
                            text: 'Produce Quantity',
                            style: {
                                fontWeight: 'bold',
                                color: 'Black'
                            }
                        }
                    }],
                    tooltip: {
                        shared: true
                    },
                    plotOptions: {
                        column: {
                            borderRadius: 5
                        }
                    },
                    series: finalSeries
                });

                if (dataLength > 0) {
                    $("#mainTPCost").show();
                    $("#NoDataFound").hide();
                } else {
                    $("#mainTPCost").hide();
                    $("#NoDataFound").show();

                }

            }

        });
        //-----------------------------------------------------Bind data in the graph End-------------------------------------------------------------

        $(".spinner-wrapper").fadeOut("slow");

    });</script>