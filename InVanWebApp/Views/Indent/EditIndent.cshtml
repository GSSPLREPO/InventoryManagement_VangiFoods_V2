@model InVanWebApp_BO.IndentBO
@{
    ViewBag.Title = "EditIndent";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}

@using (Html.BeginForm("EditIndent", "Indent", FormMethod.Post))
{
    <div class="card">
        <div class="card-body">
            <h4>Edit Indent</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ID)
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Indent Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.IndentNo, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.IndentNo, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Indent Date")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.IndentDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.IndentDate, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Indent By")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.RaisedBy, (IEnumerable<SelectListItem>)ViewData["EmployeeName"], "---Select---", new { @class = "form-control", onchange = "SetUserName()" })
                    @Html.ValidationMessageFor(model => model.RaisedBy, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-4 d-none">
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Designation")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.DesignationId, (IEnumerable<SelectListItem>)ViewData["Designations"], "---Select---", new { @class = "form-control", onchange = "SetDesignationName()" })
                    @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-4 d-none">
                    @Html.TextBoxFor(model => model.DesignationName, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Location Name")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.LocationId, (IEnumerable<SelectListItem>)ViewData["LocationName"], "---Select---", new { @class = "form-control", onchange = "SetLocationName()" })
                    @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-4 d-none">
                    @Html.TextBoxFor(model => model.LocationName, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Remarks")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group">
                            <div class="row">
                                <div class="table-sorter-wrapper col-lg-12 table-responsive">
                                    <table class="table table-striped" id="submissionTable">
                                        <thead>
                                            <tr>
                                                <th class="sortStyle">
                                                    Item Code
                                                </th>
                                                <th class="sortStyle d-n d-none">
                                                    Selected Item Code
                                                </th>
                                                <th class="sortStyle">
                                                    Item
                                                </th>
                                                <th class="sortStyle">
                                                    Indent Quantity
                                                </th>
                                                <th class="sortStyle">
                                                    Units
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody id="myTableBody">
                                            @{ int c = 1;
                                                foreach (var item in Model.indent_Details)
                                                {
                                                    string itemListForDD = "itemListForDD";
                                                    itemListForDD = itemListForDD + (c - 1);
                                                    <tr id="tablerow_@c">
                                                        <td>
                                                            @Html.DropDownListFor(model => model.Item_ID, (IEnumerable<SelectListItem>)ViewData[itemListForDD], "--Select Item---",
                                                                new { @class = "form-control form-control-sm", id = "Item_ID_" + c, style = "height:30px;", onchange = "getitemDetailsJSTbl('" + c + "')" })
                                                            @*@Html.TextBoxFor(x => item.Item_ID, new { @class = "form-control", @readOnly = "readOnly", style = "height:30px;width:110px;" })*@
                                                        </td>
                                                        <td class="col-md-4 d-none">
                                                            @Html.TextBox("Item_Code_" + c, item.ItemCode, new { @class = "form-control form-control-sm", @readonly = "readonly", style = "height:30px;" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBox("ItemName_" + c, item.ItemName, "", new { @class = "form-control form-control-sm", style = "height:30px;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBox("ItemQuantity_" + c, item.RequiredQuantity, new
                                                            {
                                                                @class = "form-control form-control-sm text-right",
                                                                style = "height:30px;",
                                                                value = "0",
                                                                onkeypress = "return isNumberKey(event)",
                                                           onchange = "CalItemTotalPrice($(this).val(),id)"
                                                            })
                                                        </td>
                                                        <td>
                                                            @Html.TextBox("ItemUnit_" + c, item.ItemUnit, "", new { @class = "form-control form-control-sm", style = "height:30px;width:100px;", @readonly = "readonly" })
                                                        </td>
                                                        <td>
                                                            <button type="button" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b);" onclick="removeTr(@c);">Delete</button>
                                                        </td>
                                                    </tr>
                                                    { c++; }
                                                }

                                            }
                                        </tbody>
                                    </table>
                                    <br />
                                    <button type="button" class="btn btn-sm btn-primary shadow" style="background: linear-gradient(85deg, #392c70, #6a005b);" id="AddItem">
                                        + Add Item
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            @*<input class="form-control text-right" id="TxtItemDetails" name="TxtItemDetails" value="" />*@
                            @Html.TextBoxFor(model => model.itemDetails, new { style = "display:none" })
                        </div>
                    </div>
                </div>
            </div>
            <br />


            <a href="@Url.Action("Index", "Indent")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                Back To List
            </a>
            <button type="submit" id="btnSave" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b); float:right;" onclick="SaveBtnClick()">Update</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script type="text/javascript">

    function SetUserName() {
        var selectedOptionTerms = document.getElementById("RaisedBy").selectedIndex;
        var tempUserName = document.getElementById("RaisedBy").options[selectedOptionTerms].innerText;
        document.getElementById("UserName").value = tempUserName;
    }

    function SetDesignationName() {
        var selectedOptionTerms = document.getElementById("DesignationId").selectedIndex;
        var tempDesignation = document.getElementById("DesignationId").options[selectedOptionTerms].innerText;
        document.getElementById("DesignationName").value = tempDesignation;
    }

    function SetLocationName() {
        var selectedOptionTerms = document.getElementById("LocationId").selectedIndex;
        var tempLocation = document.getElementById("LocationId").options[selectedOptionTerms].innerText;
        document.getElementById("LocationName").value = tempLocation;
    }

    var TxtItemDetails = "";

    //==================Set value in txtItemDetails onCick of Save/Update button======--------
    function SaveBtnClick() {
        createJson();
    };

    function createJson() {
        let res = [...document.getElementById("myTableBody").children].map(tr =>
            Object.fromEntries([...tr.querySelectorAll("input,select")].map(el =>
                [el.name, el.value])));
        var TxtItemDetails = JSON.stringify(res);
        console.log(TxtItemDetails);
        $('#itemDetails').val(TxtItemDetails);
    }
    //==========end===============

    function getitemDetailsJSTbl(count) {
        console.log(count);
        var itemId = "Item_ID_" + count;
        var selectedItemId = $("#" + itemId).val();
                    $.ajax({
                type: 'POST',
                url: '@Url.Action("GetitemDetails","PurchaseOrder")', // we are calling json method

                dataType: 'json',
                data: { id: selectedItemId, currencyId: '0' },
                //Rahul 'currencyId' added from controller
                // here we are get value of selected item and passing same value
                //as inputto json method GetitemDetails.

                        success: function (itemDescription) {
                            var description = JSON.stringify(itemDescription);
                            console.log(description);

                            $("#Item_Code_" + count).val(itemDescription.Item_Code);
                            $("#ItemName_" + count).val(itemDescription.Item_Name);
                            $("#ItemUnit_" + count).val(itemDescription.UnitCode);
                            $("#ItemQuantity_" + count).val('0');
                },
                failure: function () {
                    alert('Failed to retrieved item detals!');
                },
                error: function (ex) {
                    alert('Failed to retrieve Item description.' + ex);
                }
            });

    }

    ///Finding the length of existing table
    var table = document.getElementById('submissionTable');
    var counter = table.rows.length;

    $("#AddItem").click(function () {
        var itemId = "Item_ID_" + counter;
        var itemCode = "Item_Code_" + counter;
        var itemDescription = "ItemName_" + counter;
        var itemQuantity = "ItemQuantity_" + counter;
        var itemUnit = "ItemUnit_" + counter;
        $('<tr id="tablerow' + counter + '">' + '<td>' +
            //'<select id="ItemID" class="form-control" style = "height:30px;width:100px;" name="ItemID[' + counter + ']" required="required" /></select>' +
            //'<input type="text" id="ItemID" class="form-control" style = "height:30px;width:100px;" name="ItemID[' + counter + ']" value="" required="required" />' +
            '<select id="' + itemId + '" onchange="getitemDetailsJSTbl(' + counter + ')"; class="form-control form-control-sm" data-val="true" data-val-number="The field Item_ID must be a number." name="' + itemId + ' " style="height:30px;" aria-describedby="Item_ID-error" aria-invalid="false">' + $('#Item_ID_1').html() + '</select>' +
            '</td>' +
            '<td class="d-none">' +
            '<input type="text" id="' + itemCode + '" class="form-control form-control-sm" style = "height:30px;width:200px;" name="' + itemCode + '" value="" required="required" />' +
            '</td>' +
            '<td>' +
            '<input type="text" id="' + itemDescription + '" class="form-control form-control-sm" style = "height:30px;" name="' + itemDescription + '"readonly = "readonly" value="" required="required" />' +
            '</td>' +
            '<td>' +
            '<input type="text" id="' + itemQuantity + '" class="form-control form-control-sm text-right" style = "height:30px;" name="' + itemQuantity + '" value="0"     required="required" />' +
            '</td>' +
            '<td>' +
            '<input type="text" id="' + itemUnit + '" class="form-control form-control-sm" style = "height:30px;width:100px;" name="' + itemUnit + '"readonly = "readonly" value="" required="required" />' +
            '</td>' +
            '<td>' +
            '<button type="button" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b);" onclick="removeTr(' + counter + ');">Delete</button>' +
            '</td>' +
            '</tr>').appendTo('#submissionTable');

        /////////////This is piece of code is for de-selecting the Item list in the dropdown of newly created/added row//////////////////////
        document.getElementById('Item_ID_' + counter).selectedIndex = 0;
        /////////////////////end.../////////////////
        counter++;
        return false;
    });

    function removeTr(index) {
        /////Finding the length of existing table
        var table = document.getElementById('submissionTable');
        var tableRows = table.rows.length;
        if (tableRows > 2) {
            if (counter => index) {
                $('#tablerow_' + index).remove();
                counter--;
            }
        }
    }

    function isNumberKey(evt) {
        var keycode = (evt.which) ? evt.which : evt.keyCode;
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
        else {
            var parts = evt.srcElement.value.split('.');
            if (parts.length > 1 && keycode == 46)
                return false;
            else
                return true;
        }
        return true;
    }

</script>