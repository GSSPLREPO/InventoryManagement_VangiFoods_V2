@model InVanWebApp_BO.InwardNoteBO
@{
    Layout = "~/Views/Shared/MainMaster.cshtml";
}
@Html.HiddenFor(model => model.ID)
@Html.HiddenFor(model => model.PO_Id)
<div class="row" id="printV">
    <div align="right">
        <img src="~/Theme/MainContent/images/pdf.png" id="btnExport" style="width:45px;height:45px" />
    </div>
    <div class="col-md-12  grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <h3 class="card-title font-weight-bold" style="font-size: 16pt;">Inward Document</h3>
                </div>
                <hr />

                <div class="col-md-12">
                    <div class="row">

                        <div class="col-md-6">
                            <label class="font-weight-bold">Goods Received By</label>
                            @Html.TextAreaFor(model => model.ShippingDetails, new { style = "border:none; width:100%" })
                        </div>
                        <div class="col-md-6">
                            <label class="font-weight-bold">Goods Send By</label>
                            @Html.TextAreaFor(model => model.SupplierDetails, new { style = "border:none; width:100%" })
                        </div>
                    </div>
                </div>
                <br />
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <Center><h5 class="font-weight-bold">Inward Details</h5></Center>
                        <hr />
                    </div>
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-lg-2">
                                <p class="font-weight-bold">Inward Number</p>
                            </div>
                            <div class="col-lg-4">
                                @Html.DisplayFor(model => model.InwardNumber)
                            </div>
                            <div class="col-lg-2">
                                <p class="font-weight-bold">Inward Date</p>
                            </div>
                            <div class="col-lg-4">
                                @*@Html.DisplayFor(model => model.InwardDate)*@
                                @Html.TextBoxFor(model => model.InwardDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", style = "border:none" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-2">
                                <p class="font-weight-bold">PO Number</p>
                            </div>
                            <div class="col-lg-4">
                                @Html.DisplayFor(model => model.PONumber)
                            </div>
                            <div class="col-lg-2">
                                <p class="font-weight-bold">PO Date</p>
                            </div>
                            <div class="col-lg-4">
                                @*@Html.DisplayFor(model => model.PODate)*@
                                @Html.TextBoxFor(model => model.PODate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", style = "border:none" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <hr />
                <div class="row">
                    <div class="col-md-12">
                        <table class="table table-striped" id="ItemTable">
                            <thead>
                                <tr>
                                    <th>Item</th>
                                    <th>Code</th>
                                    <th>Quantity</th>
                                    <th>Tax</th>
                                    <th>Unit Price</th>
                                    @*<th>Inward Quantity</th>*@
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
                <br />
            </div>
            <div class="row">
                <div class="col-md-9" "></div>
                <div class="col-md-3">
                    @*@Html.DisplayFor(model => model.Signature)*@
                    <p class="font-weight-bold"> Authorized Signature</p>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script src="~/Theme/MainContent/jspdf.min.js_1.5.3/unpkg/jspdf.min.js"></script>
<script src="~/Theme/MainContent/jspdf.min.js_1.5.3/unpkg/html2canvas.js"></script>

<script type="text/javascript">

    $('#btnExport').click(function () {
        var printD = document.getElementById("printV");
        $("#btnExport").hide();
        $("#btnPrint").hide();
        // window.scrollTo(0, 0);
        html2canvas(printD).then(function (canvas) {

            var img = canvas.toDataURL("image/png", 1.0);

            var doc = new jsPDF('p', 'pt', 'a3');

            var specialElementHandlers = {
                '#editor': function (element, renderer) {
                    return true;
                }
            };

            doc.addImage(img, 'JPEG', 5, 5);
            doc.fromHTML(printD, 15, 15, {
                'width': 200,
                // 'margin':[10,60,40,20],
                'elementHandlers': specialElementHandlers
            });
            var currentDate = new Date();
            var today = formatDate(currentDate);
            doc.save('Valve Test Report' + today + '.pdf');
            $("#btnExport").show();
            $("#btnPrint").show();
        });
        //window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);

    });


    $(document).ready(function () {
        BindItemDetails();
    });

    function BindItemDetails() {
        var id = $('#PO_Id').val();
        //For deleting the rows of Item table if exist.

        var table = document.getElementById('ItemTable');
        var rowCount = table.rows.length;
        console.log(rowCount)
        while (rowCount != '1') {
            var row = table.deleteRow(rowCount - 1);
            rowCount--;
        }

        $.ajax({
            type: "POST",
            url: `/InwardNote/BindPODetails?id=` + id,
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                console.log(result);
                //$('#PODate').val(result[0].PODate);
                $('#ShippingDetails').val(result[0].BuyerAddress);
                $('#SupplierDetails').val(result[0].SupplierAddress);
                var ColCount = result.length

                //===================Create dynamic table for binding Item details====================//
                var table = document.getElementById('ItemTable');
                for (var j = 1; j < result.length; j++) {
                    var rowCount = table.rows.length;
                    var cellCount = table.rows[0].cells.length;
                    var row = table.insertRow(rowCount);
                    for (var i = 0; i < cellCount; i++) {
                        var cell = 'cell' + i;
                        cell = row.insertCell(i);
                        if (i == 0) {
                            cell.innerHTML = result[j].ItemName;
                        }
                        else if (i == 1) {
                            cell.innerHTML = result[j].Item_Code;
                        }
                        else if (i == 2) {
                            cell.innerHTML = result[j].ItemQuantity + " " + result[j].ItemUnit;
                        }
                        else if (i == 3) {
                            cell.innerHTML = result[j].ItemTaxValue + " %";
                        }
                        else if (i == 4) {
                            cell.innerHTML = result[j].ItemUnitPrice + " Rs";
                        }
                        //else if (i == 5) {
                        //    var trow = '<input type="text"  name="TextBox'+i+'" value="TextBox'+i+'" >';
                        //    cell.append(trow);
                        //}
                    }

                }
            }
        });
    }
</script>