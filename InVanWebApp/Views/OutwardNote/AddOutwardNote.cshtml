@model InVanWebApp_BO.OutwardNoteBO
@{
    ViewBag.Title = "AddOutwardNote";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}

@using (Html.BeginForm("AddOutwardNote", "OutwardNote", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            <h4>Add Outward Note</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Outward Note Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.OutwardNumber, new { @class = "form-control form-control-sm", Value = ViewData["DocumentNo"], @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.OutwardNumber, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Outward Note Date")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.OutwardDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.OutwardDate, "", new { @class = "error mt-2 text-danger" })
                </div>

            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Is Returnable")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.IsReturnable, new List<SelectListItem>{
                    new SelectListItem{ Text="Not-Returnable", Value = "false" },
                    new SelectListItem{ Text="Returnable", Value = "true" }
                    }, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.IsReturnable, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Verified By")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.VerifiedBy, (IEnumerable<SelectListItem>)ViewData["EmployeeName"], "---Select---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VerifiedBy, "", new { @class = "error mt-2 text-danger" })
                </div>
                @Html.HiddenFor(model => model.VerifiedByName)
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Location Name")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">

                    @Html.DropDownListFor(model => model.LocationID, (IEnumerable<SelectListItem>)ViewData["LocationList"], "---Select---", new { @class = "form-control", onchange = "SelectedIndexChangedLocation($(this).val())" })
                    @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-4 d-none">
                    @Html.HiddenFor(model => model.LocationName)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-6 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title" style="color:darkcyan">
                                Location Address
                                <span style="color:red">*</span>
                            </h4>
                            <hr />
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.LocationAddress, new { @class = "form-control", placeholder = "Supplier address", style = "height:100px", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.LocationAddress, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title" style="color:darkcyan">
                                Delivery Address
                                <span style="color:red">*</span>
                            </h4>
                            <hr />
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.DeliveryAddress, new { @class = "form-control", placeholder = "Supplier address", style = "height:100px" })
                                @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Dispatch Through")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.DispatchThrough, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(model => model.DispatchThrough, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Docket/LR Number")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.DocketNumber, new { @class = "form-control form-control-sm", maxlength = "30", onkeypress = "return isAlphaNumeric(event)" })
                    <span id="valDocketNumber" style="display:none;"></span>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Contact Person")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ContactPerson, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Contact Number")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ContactInformation, new { @class = "form-control form-control-sm", maxlength = "10" })
                    @Html.ValidationMessageFor(model => model.ContactInformation, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2 mb-1">
                    @Html.Label("Perpose")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control form-control-sm", maxlength = "100" })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <hr />
            <div class="row">
                <h4 style="color:darkcyan">Item Details</h4>
            </div>
            <hr />
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group">
                            <div class="row">
                                <div class="table-sorter-wrapper col-lg-12 table-responsive">
                                    <table class="table table-striped" id="submissionTable">
                                        <thead>
                                            <tr style="background-color:rgba(0, 0, 0, 0.10);">
                                                <th class="sortStyle">Item Code</th>
                                                <th class="sortStyle d-n d-none">Item Id</th>
                                                <th class="sortStyle">Item</th>
                                                <th class="sortStyle">Shipping Quantity</th>
                                                <th class="sortStyle">Units</th>
                                                <th class="sortStyle">Comments</th>
                                                <th class="sortStyle"></th>
                                            </tr>
                                        </thead>
                                        <tbody id="myTableBody">
                                            <tr id="tablerow">
                                                <td>
                                                    @Html.DropDownList("Item_ID", (IEnumerable<SelectListItem>)ViewData["itemListForDD"], "--Select Item--", new { @class = "form-control form-control-sm", style = "height:30px;width:auto;" })
                                                </td>
                                                <td class="col-md-4 d-none">
                                                    @Html.TextBoxFor(model => model.ItemCode, new { @class = "form-control form-control-sm", Value = "", @readonly = "readonly", style = "height:30px;width:200px;" })
                                                </td>
                                                <td>
                                                    @Html.TextBox("ItemName", "", new { @class = "form-control form-control-sm", style = "height:30px;width:auto;", @readonly = "readonly" })
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(model => model.ShippedQuantity, new { @class = "form-control form-control-sm", style = "height:30px;", value = "0", onkeypress = "return isNumberKey(event)", MaxLength = "8", onchange = "onShippedQtyChange()" })
                                                </td>
                                                <td>
                                                    @Html.TextBox("ItemUnit", "", new { @class = "form-control form-control-sm", style = "height:30px;width:auto;", @readonly = "readonly" })
                                                </td>

                                                <td>
                                                    @Html.TextBoxFor(model => model.Comments, new { @class = "form-control form-control-sm", style = "height:30px;width:auto;", maxLength = "95" })
                                                </td>
                                                <td>
                                                    <button type="button" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b);" enable="true" disabled>Delete</button>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    <br />
                                    <button type="button" class="btn btn-sm btn-primary shadow" style="background: linear-gradient(85deg, #392c70, #6a005b);" id="AddItem">
                                        + Add Item
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="col-md-12 grid-margin stretch-card">
                <div class="col-md-6 grid-margin stretch-card flex-wrap">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title" style="color:darkcyan">Attach Signature</h4>
                            @*<label style="color:red;font-size:12px; float:left;">(Note: Only .png,.jpeg and jpg are allowed!)</label>*@
                            <hr />
                            <div class="form-group">
                                <input type="file" id="file" name="Signature"
                                       onchange="return fileValidation()" />
                                <!-- Image preview -->
                                <br />
                                <br />
                                <center>
                                    <div id="imagePreview"></div>
                                </center>
                            </div>
                        </div>
                        <label style="color:red;font-size:12px; float:left;">(Note: Only .png,.jpeg and jpg are allowed!)</label>

                    </div>
                </div>
                <br />
            </div>
            <br />
            <div class="col d-flex justify-content-end" style="margin-left: auto;">
                <div class="row">
                    <div class="col">
                        <button type="submit" id="btnSave" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b); float:right;" onclick="SaveBtnClick()">Save</button>
                    </div>
                    <div class="col">
                        <a href="@Url.Action("Index", "OutwardNote")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                            Back To List
                        </a>
                    </div>
                </div>
            </div>
            @Html.HiddenFor(model => model.txtItemDetails)
        </div>
    </div>
}
@Html.Raw(TempData["Success"])
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="https://cdn.jsdelivr.net/npm/table-to-json@1.0.0/lib/jquery.tabletojson.min.js" integrity="sha256-H8xrCe0tZFi/C2CgxkmiGksqVaxhW0PFcUKZJZo1yNU=" crossorigin="anonymous"></script>*@
}

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/Script/AddOutwardNote.js"></script>