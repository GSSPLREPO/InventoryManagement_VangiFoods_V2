@model InVanWebApp_BO.PostProductionRejectionNoteBO
@{ ViewBag.Title = "AddPostProductionRejectionNote";
    Layout = "~/Views/Shared/MainMaster.cshtml"; }

@using (Html.BeginForm("AddPostProductionRejectionNote", "PostProductionRejectionNote"))
{
@Html.AntiForgeryToken()
                <div class="card">
                    <div class="card-body">

                        <h4>Add Post Production Rejection Note</h4>
                        <hr />
                        @Html.ValidationSummary(true)

                        <div class="row">
                            <div class="col-md-2">
                                <label id="lblNoteDate">Rejection Note Date</label>
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.PostProdRejectionNoteDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.PostProdRejectionNoteDate, "", new { @class = "error mt-2 text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Rejection Note Number")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.PostProdRejectionNoteNo, new { @class = "form-control form-control-sm", type = "text", Value = ViewData["DocumentNo"], @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.PostProdRejectionNoteNo, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("Type")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.PostProdRejectionType, new List<SelectListItem>{
                                    new SelectListItem{ Text="--Select--",Value=""},
                                    new SelectListItem{ Text="FGS",Value="FGS"},
                                    new SelectListItem{ Text="COA", Value="COA"},
                                    new SelectListItem{ Text="Product Evaluation Log", Value="ProductEvaluationLog"} }, new { @class = "form-control form-control-sm", id = "RejectionType" })

                                @Html.HiddenFor(model => model.PostProdRejectionType)

                                @*<select class="form-control form-control-sm" id="RejectionType" name="PostProdRejectionType" data-val="true" data-val-required="Select the Rejection Type!">
                    <option value="">--Select--</option>
                    <option value="FGS">FGS</option>
                    <option value="COA">COA</option>
                    <option value="ProductEvaluationLog">Product Evaluation Log</option>
                </select>*@
                                @Html.ValidationMessageFor(model => model.PostProdRejectionType, "", new { @class = "error mt-2 text-danger" })
                            </div>
                            @*<div id="StageDiv" style="display:none;">*@
                            <div class="col-md-2 StageDiv" style="display:none;">
                                @Html.Label("Stages")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4 StageDiv" style="display:none;">
                                <select class="form-control form-control-sm" id="Stage" name="Stage">
                                    <option value="1">Stage-1</option>
                                    <option value="2">Stage-2</option>
                                </select>
                            </div>
                            @*</div>*@
                            @*<div id="BatchRejectionDiv" style="display:none;">*@
                            <div class="col-md-2 BatchRejectionDiv" style="display:none;">
                                @Html.Label("Batch Rejection")
                            </div>
                            <div class="col-md-4 BatchRejectionDiv" style="display:none;">
                                @Html.TextBoxFor(model => model.WholeBatchRejection, new { @class = "form-check-input form-control", type = "checkbox", value = "falses" })
                            </div>
                            @*</div>*@
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("Batch Number")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4">
                                @*//Rahul commented 'WorkOrderDD' and added 'BatchNoDD' as per MOM 26-06-23.*@
                                @*@Html.DropDownListFor(model => model.FGS_ID, (IEnumerable<SelectListItem>)ViewData["WorkOrderDD"], "---Select---", new { @class = "form-control form-control-sm", onchange = "WorkOrderChange($(this).val())" })*@
                                @Html.DropDownListFor(model => model.FGS_ID, (IEnumerable<SelectListItem>)ViewData["BatchNoDD"], "---Select---", new { @class = "form-control form-control-sm", onchange = "BatchNoChange($(this).val())" })
                                @Html.HiddenFor(model => model.BatchNumber)  @*//Rahul updated 'WorkOrderNo' to 'BatchNo' as per MOM 26-06-23.*@
                                @Html.HiddenFor(model => model.SO_No)
                                @Html.HiddenFor(model => model.SO_Id)
                                @Html.ValidationMessageFor(model => model.FGS_ID, "", new { @class = "error mt-2 text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Work Order Number")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.WorkOrderNo, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.WorkOrderNo, "", new { @class = "error mt-2 text-danger", id = "valMsgWON" })
                            </div>
                        </div>
                        <br />  @*//Rahul added 'PackageSize' from 'FGS' 26-06-2023.*@
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("Package Size")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.PackageSize, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.PackageSize, "", new { @class = "error mt-2 text-danger", id = "valMsgPS" })
                            </div>
                        </div>
                        <br />
                        <div class="row" id="divLabel">
                            <div class="col-md-2">
                                @Html.Label("Item QC Details")
                            </div>
                        </div>
                        <hr />
                        <div class="row" id="divTbl">
                            <div class="col-md-12 table-responsive">
                                <table class="table table-striped" id="ItemTable">
                                    <thead>
                                        <tr>
                                            <th class="d-n d-none">Item Id</th>
                                            <th>Item Code</th>
                                            <th>Item</th>
                                            <th>Ordered Quantity (Packets)</th>
                                            <th>FGS Quantity (Packets)</th>
                                            <th>Current FGS Quantity (Packets)</th>     @*Rahul added 'Current FGS Quantity (Packets)' 27-06-23.*@
                                            <th>Total Rejected Quantity (Packets)</th>  @*Rahul updated 'Total Rejected Quantity (Packets)' 27-06-23.*@
                                            <th>Current Rejected Quantity (Packets)</th>    @*Rahul added 'Current Rejected Quantity (Packets)' 27-06-23.*@     
                                            <th>Remarks</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                        @Html.TextBoxFor(model => model.txtItemDetails, new { style = "display:none" })
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("Remarks")
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="col d-flex justify-content-end" style="margin-left: auto;">
                            <div class="row">
                                <div class="col-3">
                                    <button type="submit" id="btnSave" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b);float:right;" onclick="SaveBtnClick()">Save</button>
                                </div>
                                @*Rahul added class 'd-none' 26-06-23.*@
                                <div class="col-4 d-none">
                                    <button type="submit" id="btn_SaveDraft" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b);float:right">Save Draft</button>
                                </div>
                                @*Rahul added class 'ml-4' 26-06-23.*@
                                <div class="col-4 ml-4">
                                    <a href="@Url.Action("Index", "PostProductionRejectionNote")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                                        Back To List
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                                @Html.HiddenFor(model => model.DraftFlag, new { @Value = "false" })}


@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>


<script type="text/javascript">

    $("#btn_SaveDraft").click(function () {
        $("#DraftFlag").val('true');
        createJson();
    });

    //==================Set value in txtItemDetails onCick of Save/Update button======--------
    function SaveBtnClick() {
        createJson();
    };
    //==========end===============

    @*//Rahul commented 'WorkOrderDD' and added 'BatchNoDD' as per MOM 26-06-23.*@ 
    /*function WorkOrderChange(id) {*/
    function BatchNoChange(id) { 
        //Rahul added 'rowCount' For deleting the rows of Item table if exist. 02-066-2023.
        var table = document.getElementById('ItemTable');
        var rowCount = table.rows.length;
        while (rowCount != '1') {
            var row = table.deleteRow(rowCount - 1);
            rowCount--;
        }

        var RejType = $('#RejectionType').val();
        if (RejType == '' || RejType == null) {
            $('#RejectionType').focus();
            $('#FGS_ID').val('');
            return;
        }

        $('#btnSave').prop('disabled', false);
        $('#btn_SaveDraft').prop('disabled', false);
        $('#valMsgWON').hide();
        $('#valMsgPS').hide();  //Rahul added 'PackageSize' from 'FGS' 26-06-2023.  
        $('#RejectionType').prop('disabled', true);

        var Stage = 0;
        if (RejType == 'FGS') {
            var Stage = $('#Stage').val();
        }

        var WO = $('#FGS_ID option:selected').text();
        WO = WO.split(' (')[0];
        $('#WorkOrderNo').val(WO);

        $.ajax({
            type: "POST",
            url: '/PostProductionRejectionNote/GetItemDetails?FGS_Id=' + id + "&Stage=" + Stage + "&Type=" + RejType,
            data: "{ }",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result != null) {
                    if (result.SalesOrderId == null) {
                        alert('There is no Stage-1 record for the selected Work Order!');
                        window.location.href = '/PostProductionRejectionNote';
                    }
                    $('#BatchNumber').val(result.BatchNo);                    
                    $('#WorkOrderNo').val(result.WorkOrderNo);  //Rahul added 'WorkOrderNo' from 'FGS' 26-06-2023. 
                    $('#PackageSize').val(result.PackageSize);  //Rahul added 'PackageSize' from 'FGS' 26-06-2023.  
                    $('#CurrentFGSQty').val(result.CurrentFGSQty);  //Rahul added 'CurrentFGSQty' from 'PP_RN_D' 26-06-2023.
                    $('#CurrentRejectedQty').val(result.CurrentRejectedQty);  //Rahul added 'CurrentRejectedQty' from 'PP_RN_D' 26-06-2023.

                    if (result.SalesOrderId != 0) {
                        $('#SO_No').val(result.SONo);
                        $('#SO_Id').val(result.SalesOrderId);

                        //===================Create dynamic table for binding Item details====================//
                        var table = document.getElementById('ItemTable');
                        var j = 0;
                        // for (var j = 0; j < result.length; j++) {
                        var rowCount = table.rows.length;
                        var cellCount = table.rows[0].cells.length;
                        var row = table.insertRow(rowCount);
                        for (var i = 0; i < cellCount; i++) {
                            var cell = 'cell' + i;
                            cell = row.insertCell(i);
                            if (i == 0) {
                                var t0 = document.createElement("input");
                                t0.id = "ItemID_" + j;
                                t0.setAttribute("disabled", "true");
                                t0.setAttribute("class", "d-none");
                                t0.setAttribute("value", result.ItemId);
                                cell.setAttribute("class", "d-none");
                                cell.appendChild(t0);
                            }
                            else if (i == 1) {
                                var t1 = document.createElement("input");
                                t1.id = "ItemCode_" + j;
                                t1.setAttribute("disabled", "true");
                                t1.setAttribute("style", "background:transparent;border:none;");
                                t1.setAttribute("value", result.Item_Code);
                                cell.appendChild(t1);
                            }
                            else if (i == 2) {
                                var t2 = document.createElement("input");
                                t2.id = "ItemName_" + j;
                                t2.setAttribute("disabled", "true");
                                t2.setAttribute("style", "background:transparent;border:none;");
                                t2.setAttribute("value", result.ProductName);
                                cell.appendChild(t2);
                            }
                            else if (i == 3) {
                                var t3 = document.createElement("input");
                                t3.id = "OrderQty_" + j;
                                t3.setAttribute("disabled", "true");
                                t3.setAttribute("style", "background:transparent;border:none;");
                                t3.setAttribute("value", result.OrderQty);
                                cell.appendChild(t3);
                            }
                            else if (i == 4) {
                                var t4 = document.createElement("input");
                                t4.id = "FGSQty_" + j;
                                t4.setAttribute("disabled", "true");
                                t4.setAttribute("style", "background:transparent;border:none;");
                                t4.setAttribute("value", result.QuantityInKG);
                                cell.appendChild(t4);
                            }   /// Rahul added 'CurrentFGSQty_' 27-06-23. 
                            else if (i == 5) {
                                var t5 = document.createElement("input");
                                t5.id = "CurrentFGSQty_" + j;
                                t5.setAttribute("disabled", "true");
                                t5.setAttribute("style", "background:transparent;border:none;");
                                t5.setAttribute("value", result.CurrentFGSQty);
                                cell.appendChild(t5);
                            }   /// Rahul added 'CurrentFGSQty_' 27-06-23. 
                            else if (i == 6) {
                                var t6 = document.createElement("input");
                                t6.id = "txRejectedQty_" + j;
                                t6.setAttribute("disabled", "true");
                                t6.setAttribute("style", "background:transparent;border:none;");
                                t6.setAttribute("value", result.CurrentRejectedQty); 
                                cell.appendChild(t6);
                            }
                            //else if (i == 6) {
                            //    var t4 = document.createElement("input");
                            //    t4.id = "txRejectedQty_" + j;
                            //    t4.removeAttribute("disabled", "false");
                            //    t4.removeAttribute("disabled", "true");
                            //    t4.setAttribute("maxlength", "8");
                            //    t4.setAttribute("onkeypress", "return isNumberKey(event)");
                            //    t4.setAttribute("onchange", "OnChangeRejQty($(this).val(),id)");
                            //    t4.setAttribute("class", "form-control form-control-sm");
                            //    t4.setAttribute("value", 0);    /// Rahul added '"value", 0' 27-06-23.
                            //    cell.appendChild(t4);
                            //    var t6 = document.createElement('span');
                            //    t6.id = "spanRejQty_" + j;
                            //    cell.appendChild(t6);
                            //}   /// Rahul added 'txCurrentRejectedQty_' 27-06-23.
                            else if (i == 7) {
                                var t7 = document.createElement("input");
                                t7.id = "txCurrentRejectedQty_" + j;
                                t7.removeAttribute("disabled", "false");
                                t7.removeAttribute("disabled", "true");
                                t7.setAttribute("maxlength", "8");
                                t7.setAttribute("onkeypress", "return isNumberKey(event)");
                                t7.setAttribute("onchange", "OnChangeRejQty($(this).val(),id)");
                                t7.setAttribute("class", "form-control form-control-sm");
                                t7.setAttribute("value", 0); 
                                cell.appendChild(t7);
                                var t6 = document.createElement('span');
                                t6.id = "spanCurrentRejQty_" + j;
                                cell.appendChild(t6);
                            }
                            else if (i == 8) {
                                var t8 = document.createElement("input");
                                t8.id = "txRemark_" + j;
                                t8.removeAttribute("disabled", "false");
                                t8.removeAttribute("disabled", "true");
                                t8.setAttribute("maxlength", "95");
                                t8.setAttribute("class", "form-control form-control-sm");
                                cell.appendChild(t8);
                            }
                        }

                        var WholeRejFlag = $("#WholeBatchRejection").is(":checked");
                        if (WholeRejFlag) {
                            var FGSQty = $('#FGSQty_0').val();
                            $('#txRejectedQty_0').val(FGSQty);
                            document.getElementById('txRejectedQty_0').setAttribute('disabled', 'disabled');
                        }
                        else if (!WholeRejFlag && RejType != 'FGS') {                            
                            document.getElementById('txRejectedQty_0').removeAttribute('disabled', 'disabled');
                        } 
                        // }
                    }
                    else {
                        $('#divTbl').hide();
                        $('#divLabel').hide();
                        alert('There is no COA/Product evaluation log generated for the selected Work-Orders\' batch no: ' + result.BatchNo + '!');
                        window.location.href = '/PostProductionRejectionNote';
                    }
                }
                else {
                    alert('Something went wrong!');
                    window.location.href = '/PostProductionRejectionNote';
                }
            }
        });
    }

    function OnChangeRejQty(value, id) {            
        var rowNo = id.split('_')[1];
        if (value == '')
            value = 0;
        debugger
        var RejQty = parseFloat(value);
        var FGSQty = $('#FGSQty_' + rowNo).val();
        FGSQty = parseFloat(FGSQty);

        var CurrentFGSQty = $('#CurrentFGSQty_' + rowNo).val();
        CurrentFGSQty = parseFloat(CurrentFGSQty);

        var TotRejectedQty = $('#txRejectedQty_' + rowNo).val();
        TotRejectedQty = parseFloat(TotRejectedQty); 

        var TempRejQty = TotRejectedQty + RejQty;
        var tempCurrentFGSQty = FGSQty - TempRejQty;
        var CurrentFGSQty = $('#CurrentFGSQty_' + rowNo).val(tempCurrentFGSQty);
        CurrentFGSQty = parseFloat(CurrentFGSQty); 


        if (FGSQty < RejQty) {
            /// Rahul commented '#spanRejQty_' and "txRejectedQty_" 27-06-23. 
            //$('#spanRejQty_' + rowNo).text('Rejected quantity cannot be greater than FGS Quantity!'); 
            //$('#spanRejQty_' + rowNo).show(); 
            //document.getElementById('spanRejQty_' + rowNo).setAttribute('style', 'color:red;');
            //document.getElementById("txRejectedQty_" + rowNo).focus();
            //document.getElementById('spanRejQty_' + rowNo).setAttribute('style', 'color:red;');
            /// Rahul added '#spanCurrentRejQty_' and "txCurrentRejectedQty_" 27-06-23.
            $('#spanCurrentRejQty_' + rowNo).text('Rejected quantity cannot be greater than FGS Quantity!');
            $('#spanCurrentRejQty_' + rowNo).show();
            document.getElementById('spanCurrentRejQty_' + rowNo).setAttribute('style', 'color:red;');
            document.getElementById("txCurrentRejectedQty_" + rowNo).focus();
            $('#btnSave').prop('disabled', true);
            $('#btn_SaveDraft').prop('disabled', true);
            return;
        }
        else {
            $('#btnSave').prop('disabled', false);
            $('#btn_SaveDraft').prop('disabled', false);
            //$('#spanRejQty_' + rowNo).text('');   /// Rahul commented '#spanRejQty_' 27-06-23. 
            //$('#spanRejQty_' + rowNo).hide();   /// Rahul commented '#spanRejQty_' 27-06-23. 
            $('#spanCurrentRejQty_' + rowNo).text('');   /// Rahul added '#spanCurrentRejQty_' 27-06-23.
            $('#spanCurrentRejQty_' + rowNo).hide();    /// Rahul added '#spanCurrentRejQty_' 27-06-23. 
        }
    }

    $('#RejectionType').change(function () {
        var QCType = $('#RejectionType option:selected').attr('value');
        $('#PostProdRejectionType').val(QCType);

        if (QCType == 'FGS') {
            $(".StageDiv").show();
            $(".BatchRejectionDiv").hide();

        }
        else {
            $(".StageDiv").hide();
            $(".BatchRejectionDiv").show();

        }

    });

    function isNumberKey(evt) {
        var keycode = (evt.which) ? evt.which : evt.keyCode;
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
        else {
            var parts = evt.srcElement.value.split('.');
            if (parts.length > 1 && keycode == 46)
                return false;
            else
                return true;
        }
        return true;
    }

    function createJson() {
        var table = document.getElementById('ItemTable');
        var rowCount = table.rows.length;
        var i = 0;
        TxtItemDetails = "[";
        for (i = 0; i < rowCount - 1; i++) {
            var ItemCode = (document.getElementById("ItemCode_" + i)).value;
            var ItemID = (document.getElementById("ItemID_" + i)).value;
            var ItemName = (document.getElementById("ItemName_" + i)).value;
            var OrderQty = ((document.getElementById("OrderQty_" + i)).value);
            var FGSQty = ((document.getElementById("FGSQty_" + i)).value);
            var CurrentFGSQty = ((document.getElementById("CurrentFGSQty_" + i)).value); ///  Rahul added 'CurrentFGSQty_' 27-06-23.
            var RejecQty = ((document.getElementById("txRejectedQty_" + i)).value);
            //RejecQty = (RejecQty == null || RejecQty == '') ? 0 : RejecQty;  ///  Rahul commented 'RejecQty' 27-06-23.
            var CurrentRejectedQty = ((document.getElementById("txCurrentRejectedQty_" + i)).value); /// Rahul added 'txCurrentRejectedQty_' 27-06-23.
            CurrentRejectedQty = (CurrentRejectedQty == null || CurrentRejectedQty == '') ? 0 : CurrentRejectedQty; /// Rahul added 'CurrentRejectedQty' 27-06-23. 

            var Remark = ((document.getElementById("txRemark_" + i)).value); 
           ///  Rahul added 'CurrentFGSQty_', 'CurrentRejectedQty' in 'TxtItemDetails' 27-06-23. 
            TxtItemDetails = TxtItemDetails + "{\"Item_Code\":\"" + ItemCode + "\", \"ItemId\":" + ItemID +
                ", \"ItemName\": \"" + ItemName + "\", \"OrderQty\": " + OrderQty + ", \"FGSQty\": " + FGSQty
                + ", \"CurrentFGSQty\": " + CurrentFGSQty + ", \"RejecQty\": " + RejecQty 
                + ", \"CurrentRejectedQty\": " + CurrentRejectedQty + ",\"Remark\": \"" + Remark +
                "\"";

            if (i == (rowCount - 2))
                TxtItemDetails = TxtItemDetails + "}";
            else
                TxtItemDetails = TxtItemDetails + "},";
        }
        TxtItemDetails = TxtItemDetails + "]";
        $('#txtItemDetails').val(TxtItemDetails);
        debugger    
        console.log(TxtItemDetails);
    }

</script>

@Html.Raw(TempData["Success"])
