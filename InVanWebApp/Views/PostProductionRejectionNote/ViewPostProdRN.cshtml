@model InVanWebApp_BO.PostProductionRejectionNoteBO
@{
    ViewBag.Title = "ViewPostProdRN";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Post Production Rejection Note</title>
    <style>
        html2canvas-container {
            width: 3000px !important;
            height: 2000px !important;
        }
        #submissionTable tr td {
            white-space: normal;
            table-layout: auto;
            border-color: darkgrey;
            font-size: 110%;
            width: -1%;
            /*width: 100%;*/
        }

        #submissionTable label {
            font-size: 120%;
        }

        #submissionTable th {
            white-space: normal;
            border-color: darkgrey;
            font-size: 110%;
        }

        hr {
            color: black;
            height: -1%
        }
    </style>
</head>
<body>
    @Html.HiddenFor(model => model.ID)
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row" id="printV" width="1000px">
            <div class="col-md-12  grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <img class="align-self-center" src="~/Theme/MainContent/images/Logo.svg" alt="client-logo" style="width:12%;">@*height:150px;*@
                            <h3 class="card-title font-weight-bold align-self-center col-4 mb-0" style="font-size: 30pt;"> Post Production Rejection Note</h3>

                            <div class="col">
                                <div class="col-md-12">
                                    @*<img src="~/Theme/MainContent/images/ICON.png.png" id="btnExport" class="float-right" style="width:45px;height:45px" />*@
                                    <a id="ExportPdf" href="@Url.Action("ExportAsPDF", "PostProductionRejectionNote")"> <img class="float-left" src="~/Theme/MainContent/images/ICON.png.png" style="width: 45px; height: 45px; padding-top: 1px; margin-top: 2%; margin-left: 500px" /> </a>
                                </div>
                            </div>
                        </div>

                        <hr />
                        <div class="col-md-12">
                            <div style="font-size:110%; color:black">
                                <div class="row">
                                    <div class="col-md-2">
                                        <label class="font-weight-bold">Document Number</label>
                                    </div>
                                    <div class="col-md-4" style="color:black;">
                                        @Html.DisplayFor(model => model.PostProdRejectionNoteNo)
                                    </div>
                                    <div class="col-md-2">
                                        <label class="font-weight-bold">Document Date</label>
                                    </div>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.PostProdRejectionNoteDate, "{0:yyyy-MM-dd}", new { style = "border:none; color:black; padding-top:1%; padding-left: 0.05%;font-size: 100%;", @readonly = "readonly" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-2">
                                        <label class="font-weight-bold">Rejection Type</label>
                                    </div>
                                    <div class="col-md-4" style="color:black;">
                                        @Html.TextBoxFor(model => model.PostProdRejectionType, new { @class = "form-control form-control-sm", style = "border:none; color:black;padding-top:1%; padding-left: 0.05%;font-size: 100%;background:transparent;", @readonly = "readonly" })
                                    </div>
                                    <div class="col-md-2 StageDiv" style="display: none;">
                                        <label class="font-weight-bold">Stages</label>
                                    </div>
                                    <div class="col-md-4 StageDiv" style="color:black;display:none;">
                                        @Html.DisplayFor(model => model.Stage)
                                    </div>
                                    <div class="col-md-2 BatchRejectionDiv" style="display: none;">
                                        <label class="font-weight-bold">Batch Rejection</label>
                                    </div>
                                    <div class="col-md-4 BatchRejectionDiv" style="color:black;display:none;">
                                        @Html.DisplayFor(model => model.WholeBatchRejection)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-2">
                                        <label class="font-weight-bold">Work Order Number</label>
                                    </div>
                                    <div class="col-md-4" style="color:black;">
                                        @Html.DisplayFor(model => model.WorkOrderNo)
                                    </div>
                                    <div class="col-md-2">
                                        <label class="font-weight-bold">Batch Number</label>
                                    </div>
                                    <div class="col-md-4" style="color:black;">
                                        @Html.DisplayFor(model => model.BatchNumber)
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-2">
                                        <label class="font-weight-bold">Package Size</label>
                                    </div>
                                    <div class="col-md-4" style="color:black;">
                                        @Html.DisplayFor(model => model.PackageSize)
                                    </div>
                                    <div class="col-md-2">
                                        <label class="font-weight-bold">Remarks</label>
                                    </div>
                                    <div class="col-md-4" style="color:black;">
                                        @Html.DisplayFor(model => model.Remarks)
                                    </div>
                                </div>
                                </div>
                                <br />
                                <hr />
                                <div class="row">
                                    <div class="col-md-12">
                                        <Center><h4 class="font-weight-bold">Item Details</h4></Center>
                                        <hr />
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="table-sorter-wrapper col-lg-12 table-responsive">
                                                <table class="table table-hover" id="submissionTable">
                                                    <thead>
                                                        <tr>
                                                            <th>#</th>
                                                            <th class="d-n d-none">Item Id</th>
                                                            <th>Item Code</th>
                                                            <th>Item</th>
                                                            <th>Ordered Quantity (Packets)</th>
                                                            <th>FGS Quantity (Packets)</th>
                                                            <th>Rejected Quantity (Packets)</th>
                                                            <th>Remarks</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="myTableBody">
                                                        @{ int c = 1;
                                                            foreach (var item in Model.note_DetailsBOs)
                                                            {
                                            <tr id="tablerow_@c">
                                                <td>
                                                    <label>@c.</label>
                                                </td>
                                                <td class="d-n d-none">
                                                    @Html.DisplayFor(x => item.ItemId)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(x => item.ItemCode)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(x => item.ItemName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(x => item.OrderedQuantity)
                                                    @Html.DisplayFor(x => item.ItemUnit)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(x => item.TotalQuantity)
                                                    @Html.DisplayFor(x => item.ItemUnit)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(x => item.RejectedQuantity)
                                                    @Html.DisplayFor(x => item.ItemUnit)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(x => item.Remarks)
                                                </td>
                                            </tr> { c++; }
                                                            } }

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <br />
                                    </div>
                                    <div class="col-md-4">
                                        @Html.TextBoxFor(model => model.txtItemDetails, new { style = "display:none" })
                                    </div>
                                </div>
                                <br />
                                <a href="@Url.Action("Index", "PostProductionRejectionNote")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;" id="btnBack">
                                    Back To List
                                </a>
                            </div>
                        </div>
                </div>
            </div>
        </div>
    }
</body>
</html>

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script src="~/Theme/MainContent/js/jquery.min.js"></script>
<script src="~/Theme/MainContent/jspdf.min.js_1.5.3/unpkg/jspdf.min.js"></script>
<script src="~/Theme/MainContent/jspdf.min.js_1.5.3/unpkg/html2canvas.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        var QCType = $('#PostProdRejectionType').val();

        if (QCType == 'FGS') {
            $(".StageDiv").show();
            $(".BatchRejectionDiv").hide();

        }
        else {
            $(".StageDiv").hide();
            $(".BatchRejectionDiv").show();

        }
    });

    $('#btnExport').click(function () {
        var printD = document.getElementById("printV");
        $("#btnExport").hide();
        $("#btnBack").hide();
        // $("#btnPrint").hide();
        html2canvas(printD).then(function (canvas) {

            var img = canvas.toDataURL("image/png", 1.0);

            var doc = new jsPDF('p', 'pt', 'a4');

            var specialElementHandlers = {
                '#editor': function (element, renderer) {
                    return true;
                }
            };

            doc.addImage(img, 'JPEG', 5, 5, 580, 480);
            doc.fromHTML(printD, 15, 15, {
                'width': 200,
                // 'margin':[10,60,40,20],
                'elementHandlers': specialElementHandlers
            });
            var currentDate = new Date();
            //var time = getTime();
            var today = new Date();
            var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
            console.log(time);
            var today = formatDate(currentDate);
            doc.save('PostProduction_RN_' + today + '_' + time + '.pdf');
            $("#btnExport").show();
            $("#btnBack").show();
            //$("#btnPrint").show();
        });
        //window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);

    });

    function formatDate(date) {
        // alert(date);
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;
        return [day, month, year].join('-');
        //return [year, month, day].join('-');
    }
</script>