@model InVanWebApp_BO.ProductionIndentBO
@{
    ViewBag.Title = "AddProductionIndent";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}

@using (Html.BeginForm("AddProductionIndent", "ProductionIndent", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            <h4>Add Production Indent</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Indent Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ProductionIndentNo, new { @class = "form-control form-control-sm", Value = ViewData["DocumentNo"], @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ProductionIndentNo, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Issue Date")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.IssueDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date", @min = DateTime.Now.ToString("yyyy-MM-dd"), @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.IssueDate, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Indent By")
                    <span style="color:red">*</span>
                </div>
                @if (@Session["UserId"] != null)
                {
                    <div class="col-md-4 d-none">
                        @Html.TextBoxFor(model => model.RaisedBy, new { @class = "form-control", Value = @Session["UserId"], @readonly = "readonly" })
                    </div>
                }

                @if (@Session["UserName"] != null)
                {
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", Value = @Session["UserName"], @readonly = "readonly" })
                    </div>
                }
                <div class="col-md-2">
                    @Html.Label("Production Date")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.ProductionDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date", @min = DateTime.Now.ToString("yyyy-MM-dd") })
                    @Html.ValidationMessageFor(model => model.ProductionDate, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("SO Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownList("SalesOrderId", (IEnumerable<SelectListItem>)ViewData["SONumberAndId"], "--Select--",
                   new { @class = "form-control", onchange = "SelectedIndexChangedSO($(this).val(),id)" })
                    @Html.ValidationMessageFor(model => model.SalesOrderId, "", new { @class = "error mt-2 text-danger" })
                    @Html.HiddenFor(model => model.SONo)                    
                </div>
                <div class="col-md-2">
                    @Html.Label("Work Order No")
                </div>
                <div class="col-md-4">
                    @Html.DropDownList("SOId", (IEnumerable<SelectListItem>)ViewData["WONumberAndId"], "--Select--",
                   new { @class = "form-control", onchange = "SelectedIndexChangedWO($(this).val(),id)" })
                    @Html.ValidationMessageFor(model => model.SalesOrderId, "", new { @class = "error mt-2 text-danger", id = "ValChallanNo" })
                    @Html.HiddenFor(model => model.WorkOrderNo)
                </div>
            </div>


            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Product Name")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.ProductID, (IEnumerable<SelectListItem>)ViewData["ProductName"], "---Select Product---", new { @class = "form-control form-control-sm", onchange = "SelectedIndexChangedProductNameList($(this).val(),id)" })
                    @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "error mt-2 text-danger" })
                    @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control form-control-sm d-none", @readonly = "readonly" })
                </div>

                <div class="col-md-2">
                    @Html.Label("Total Batches")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.TotalBatches, new { @class = "form-control form-control-sm", maxlength = "8", })
                    @Html.ValidationMessageFor(model => model.TotalBatches, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Remarks")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control form-control-sm", maxlength = "95", onkeypress = "createJson();" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <hr />
            <div class="row">
                <div class="col-md-4" style="color:darkcyan">
                    @Html.Label("Indent Ingredients detail")
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-12 table-responsive">
                    <table class="table table-hover" id="ItemTable">
                        <tr>
                            <th class="d-none">ItemID</th>
                            <th>Ingredients Code</th>
                            <th>Ingredients</th>
                            <th>Batch Quantity</th>
                            <th>Final Quantity</th>
                            <th>Units</th>
                            <th>Percentage</th>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.TxtItemDetails, new { style = "display:none" })
            </div>
            <br />
            <a href="@Url.Action("Index", "ProductionIndent")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                Back To List
            </a>
            <button type="submit" id="btnSave" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b); float:right;" onclick="SaveBtnClick()">Save</button>
        </div>
    </div>
}

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@


<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script type="text/javascript">

    var TxtItemDetails = "";

    $("#TotalBatches").change(function () {
        
        var totalBatches = $("#TotalBatches").val();
        if (totalBatches > 0) {
            var len = document.getElementById("ItemTable").rows.length;
            len = parseFloat(len) - 1;
            var t = 0;
            while (t < len) {
                var totalBatches = $("#TotalBatches").val();
                var idItemQty = document.getElementById("ItemQty_" + t).innerHTML;
                var TotItemQty = idItemQty * totalBatches;
                //console.log(TotItemQty);
                document.getElementById("ItemQty_" + t).innerHTML = TotItemQty.toFixed(4);
                var idFinalQty = document.getElementById("txtFinalQty_" + t).value;
                var TotFinalQty = idFinalQty * totalBatches;
                //console.log(TotFinalQty);
                document.getElementById("txtFinalQty_" + t).value = TotFinalQty.toFixed(4);
                t++;
            }
        }
    });

    //SO Number Start
    function SelectedIndexChangedSO(id) {        
        var selectedOptionSO, SONo;
        selectedOptionSO = document.getElementById("SalesOrderId").selectedIndex;
        SONo = document.getElementById("SalesOrderId").options[selectedOptionSO].innerText;
        document.getElementById("SONo").value = SONo;
        SelectedIndexChangedWO(id);
    }
    //SO Number End

    //WO Number Start
    function SelectedIndexChangedWO(id) {        
        var selectedOptionWO, WONo;
        selectedOptionWO = document.getElementById("SOId").selectedIndex = id;
        WONo = document.getElementById("SOId").options[selectedOptionWO].innerText;
        document.getElementById("WorkOrderNo").value = WONo;
    }
    //WO Number End

    function SelectedIndexChangedProductNameList(id) {

        var selectedOptionProductName, productName;
        selectedOptionProductName = document.getElementById("ProductID").selectedIndex;
        productName = document.getElementById("ProductID").options[selectedOptionProductName].innerText;
        document.getElementById("ProductName").value = productName;

        $("#TotalBatches").val('1');
        //For deleting the rows of Item table if exist.

        var table = document.getElementById('ItemTable');
        var rowCount = table.rows.length;
        while (rowCount != '1') {
            var row = table.deleteRow(rowCount - 1);
            rowCount--;
        }

        $.ajax({
            type: "POST",
            url: `/ProductionIndent/BindRecipeDetails?id=` + id,
            data: "{ }",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                console.log(result);
                //$('#ProductName').val(result[0].ProductName);
                var ColCount = result.length;

                //===================Create dynamic table for binding Item details====================//
                var table = document.getElementById('ItemTable');
                for (var j = 0; j < result.length; j++) {
                    var rowCount = table.rows.length;
                    var cellCount = table.rows[0].cells.length;
                    var row = table.insertRow(rowCount);
                    for (var i = 0; i < cellCount; i++) {
                        var cell = 'cell' + i;
                        cell = row.insertCell(i);
                        if (i == 0) {
                            var t0 = document.createElement("input");
                            t0.id = "ItemID_" + j;
                            t0.setAttribute("disabled", "true");
                            t0.setAttribute("class", "d-none");
                            t0.setAttribute("value", result[j].Item_ID);
                            cell.setAttribute("class", "d-none");
                            cell.appendChild(t0);
                        }
                        else if (i == 1) {
                            var t1 = document.createElement("input");
                            t1.id = "ItemCode_" + j;
                            t1.setAttribute("disabled", "true");
                            t1.setAttribute("style", "background:transparent;border:none;");
                            t1.setAttribute("value", result[j].ItemCode);
                            cell.appendChild(t1);
                        }
                        else if (i == 2) {
                            var t2 = document.createElement("input");
                            t2.id = "ItemName_" + j;
                            t2.setAttribute("disabled", "true");
                            t2.setAttribute("style", "background:transparent;border:none;");
                            t2.setAttribute("value", result[j].ItemName);
                            cell.appendChild(t2);
                        }
                        else if (i == 3) {
                            cell.innerHTML = result[j].ItemQuantity.toFixed(4);
                            cell.setAttribute("id", "ItemQty_" + j);
                            //debugger
                            //var totalBatches = $("#TotalBatches").val();
                            //var ratio = result[j].Ratio;
                            //var ItemQty = totalBatches * ratio;
                            ////cell.setAttribute("value", ItemQty);
                            //cell.innerHTML = ItemQty;
                        }
                        else if (i == 4) {
                            var t4 = document.createElement("input");
                            t4.id = "txtFinalQty_" + j;
                            t4.removeAttribute("disabled", "false");
                            t4.removeAttribute("disabled", "true");
                            t4.setAttribute("maxlength", "8");
                            t4.setAttribute("onkeypress", "return isNumberKey(event)");
                            t4.setAttribute("value", result[j].FinalQuantity.toFixed(4));
                            //debugger
                            //$("#TotalBatches").change(function () {
                                //debugger
                                //var totalBatches = $("#TotalBatches").val();
                                //var itemQuantity = result[j].ItemQuantity;
                                //var ItemQty = totalBatches * itemQuantity;
                                //t4.setAttribute("value", ItemQty.toFixed(4));
                            //});
                            t4.setAttribute("onchange", "OnChangeQty($(this).val(),id)");

                            t4.setAttribute("class", "form-control form-control-sm");
                            cell.appendChild(t4);
                        }
                        else if (i == 5) {
                            cell.innerHTML = result[j].UnitName;
                            cell.setAttribute("id", "ItemUnit_" + j);
                        }
                        else if (i == 6) {
                            var t6 = document.createElement("input");
                            t6.id = "Percentage_" + j;
                            t6.setAttribute("disabled", "true");
                            t6.setAttribute("style", "background:transparent;border:none;");
                            t6.setAttribute("value", result[j].Ratio.toFixed(4));                            
                            cell.appendChild(t6);                            
                        }
                    }
                }
            }
        });
    }


    function OnChangeQty(value, id) {        
        var totalBatches = $("#TotalBatches").val();        
        var rowNo = id.split('_')[1];
        //console.log("PerId:", id);
        var finalQty = $("#txtFinalQty_" + rowNo).val();
        //console.log(finalQty);
        var percentage = $("#Percentage_" + rowNo).val();
        //console.log(percentage);
        var finalQuantity = totalBatches * percentage * finalQty;
        //console.log(finalQuantity);        
        $("#txtFinalQty_" + rowNo).val(finalQuantity.toFixed(4));
        $("#ItemQty_" + rowNo).val(finalQuantity.toFixed(4));
    }

    function SetUserName() {
        var selectedOptionTerms = document.getElementById("RaisedBy").selectedIndex;
        var tempUserName = document.getElementById("RaisedBy").options[selectedOptionTerms].innerText;
        document.getElementById("UserName").value = tempUserName;
    }

    //==================Set value in txtItemDetails onCick of Save/Update button======--------
    function SaveBtnClick() {

        var tableLength = document.getElementById('submissionTable').rows.length;
        var flag = 0, i = 1;

        var RequiredQuantity = $('#RequiredQuantity').val();
        var IndentBy = $('#RaisedBy').val();    //Rahul added 'IndentBy' if 'flag = 1;' then '#btnSave' 'disabled' 22-02-23.
        if (IndentBy == '' || IndentBy == null) {
            $('#RaisedBy').focus();
            flag = 1;
        }
        if (RequiredQuantity != '' && RequiredQuantity != 0) {
            flag = 1;
        }
        if (tableLength > 1) {
            while (i < tableLength - 1) {
                var PhyQty = document.getElementById("requiredQuantity_" + i).value;
                PhyQty = parseFloat(PhyQty);

                if (PhyQty != 0) {
                    flag = 1;

                    i++;
                }

            }
            if (flag != 1) {
                alert("Required quantity is zero or null! Cannot create Production Indent!");
                $('#btnSave').prop('disabled', true);
                return;
            }
            else
                $('#btnSave').prop('disabled', false);
        }
        createJson();
    };

    function createJson() {
        var table = document.getElementById('ItemTable');
        var rowCount = table.rows.length;
        var i = 0;
        TxtItemDetails = "[";
        for (i = 0; i < rowCount - 1; i++) {
            var ItemID = $("#ItemID_" + i).val();
            var ItemCode = $("#ItemCode_" + i).val();
            var ItemName = $("#ItemName_" + i).val();
            var ItemQty = (document.getElementById("ItemQty_" + i)).innerHTML.split(" ")[0];
            var ItemQty = $("#txtFinalQty_" + i).val();
            ItemQty = (ItemQty == null || ItemQty == '') ? 0 : ItemQty;
            var FinalQty = $("#txtFinalQty_" + i).val();
            FinalQty = (FinalQty == null || FinalQty == '') ? 0 : FinalQty;
            var Unit = (document.getElementById("ItemUnit_" + i)).innerHTML;
            var Percentage = $("#Percentage_" + i).val();
            
            TxtItemDetails = TxtItemDetails + "{\"ItemId\":" + ItemID +
                ", \"Item_Code\":\"" + ItemCode + "\", \"ItemName\": \"" + ItemName + "\", \"ItemQty\": " + ItemQty + ", \"FinalQty\": " + FinalQty +
                ", \"ItemUnit\": \"" + Unit + "\", \"Percentage\": " + Percentage;

            if (i == (rowCount - 2))
                TxtItemDetails = TxtItemDetails + "}";
            else
                TxtItemDetails = TxtItemDetails + "},";
        }
        TxtItemDetails = TxtItemDetails + "]"
        $('#TxtItemDetails').val(TxtItemDetails);
        console.log(TxtItemDetails);
    }
    //==========end===============

    function SelectedIndexChangedItemList(id) {
        var selectedOptionTerms, itemCode;
        selectedOptionTerms = document.getElementById("Item_ID").selectedIndex;
        itemCode = document.getElementById("Item_ID").options[selectedOptionTerms].innerText;
        itemCode = itemCode.split(' (')[0];
        document.getElementById("ItemCode").value = itemCode;
    }

    function isNumberKey(evt) {
        $('#btnSave').prop('disabled', false);
        var keycode = (evt.which) ? evt.which : evt.keyCode;
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
        else {
            var parts = evt.srcElement.value.split('.');
            if (parts.length > 1 && keycode == 46)
                return false;
            else
                return true;
        }
        return true;
    }

</script>


