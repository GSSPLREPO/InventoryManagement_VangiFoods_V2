
@model InVanWebApp_BO.RejectionNoteBO

@{
    ViewBag.Title = "AddRejectionNote";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}


@using (Html.BeginForm("AddRejectionNote", "RejectionNote", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-body">
            <h4>Add Rejection Note Note</h4>
            <hr />
            @Html.ValidationSummary(true)
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Rejection Note Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.RejectionNoteNo, new { @class = "form-control form-control-sm", Value = ViewData["DocumentNo"], @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.RejectionNoteNo, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    <label id="lblNoteDate">Rejection Note Date</label>
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.NoteDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date" })
                    @Html.ValidationMessageFor(model => model.NoteDate, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @*Inward Number*@   @*Rahul added Label+span 08-02-23.*@
                    @Html.Label("Inward QC Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.InwardQCId, (IEnumerable<SelectListItem>)ViewData["InwardNumber"], "--Select--",
                   new { @class = "form-control form-control-sm", onchange = "SelectedIndexChanged($(this).val())", onmouseleave = "ValMsgInwardQCNumber($(this).val(),id)" })
                    @*@Html.ValidationMessageFor(model => model.InwardQCId, "", new { @class = "error mt-2 text-danger" }) Rahul removed and added onmouseleave event 09-02-2023.*@
                    <span id="ValMsgInwardQCNumber" style="display:none; color:red"></span>
                    @Html.HiddenFor(model => model.InwardQCNumber)
                    @Html.HiddenFor(model => model.InwardNoteNumber)
                </div>
                <div class="col-md-2">
                    @Html.Label("PO Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.PONumber, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.PONumber, "", new { @class = "error mt-2 text-danger" })
                </div>
                @Html.HiddenFor(model => model.PO_Id) 
            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Supplier Name")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.SupplierName, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-4 d-none">
                    @Html.TextBoxFor(model => model.SupplierID, new { @class = "form-control form-control-sm", Value = "", @readonly = "readonly" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Item QC details")
                </div>
            </div>
            <hr />
            <div class="row">
                @*Rahul added class table-responsive in div tag 09-02-23.*@
                <div class="col-md-12 table-responsive">
                    @*Rahul removed class table-responsive from table tag 09-02-23.*@
                    <table class="table table-striped" id="ItemTable">
                        <tr>
                            <th>Item</th>
                            <th>Code</th>
                            <th>Unit Price</th>
                            <th>Unit</th>
                            <th>Total Quantity</th>
                            <th>Inward Quantity</th>
                            <th>Rejected Quantity</th>
                            <th>Quantity took for Sorting (Kg)</th>
                            <th>Wastage (%)</th>
                            <th>Remarks</th>
                            <th class="d-none" hidden>ItemId</th>
                            <th class="d-none" hidden>Item Tax</th>
                        </tr>
                    </table>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Remarks")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control form-control-sm" }) 
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <a href="@Url.Action("Index", "RejectionNote")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                Back To List
            </a>
            <button type="submit" id="btnSave" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b);float:right;" onclick = "SetInwardQty()">Save</button> 

        </div>
    </div>
        
    @Html.TextBoxFor(model => model.InwardQuantities, new { style = "display:none" })
    
}

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>


<script type="text/javascript">
    var InwardQuantities = "";

    ///---Rahul added onmouseleave event ValMsgInwardQCNumber(value, id) strart 09-02-2023.
    function ValMsgInwardQCNumber(value, id) {
        //debugger
        var InwardQCNumber = $("#InwardQCId option:selected").val();
        if (InwardQCNumber == '' || InwardQCNumber == 0) {
            $("#ValMsgInwardQCNumber").text("Please select Inward QC number!");
            $("#ValMsgInwardQCNumber").show();
            document.getElementById(id).focus();
            return
        }
        else {
            $("#ValMsgInwardQCNumber").hide();
        }
    }
    ///---Rahul added onmouseleave event ValMsgInwardQCNumber(value, id) end.

    function SelectedIndexChanged(id) {         
        var InwardNumber = $("#InwardQCId option:selected").text();
        
        var InwNumQcNumSplit = InwardNumber.split(' (');
        document.getElementById("InwardQCNumber").value = InwNumQcNumSplit[0];
        var tempInwNumQcNumSplit = InwNumQcNumSplit[1].split(')'); 
        document.getElementById("InwardNoteNumber").value = tempInwNumQcNumSplit[0];

        //For deleting the rows of Item table if exist.       
        var table = document.getElementById('ItemTable');
        var rowCount = table.rows.length;
        while (rowCount != '1') {
            var row = table.deleteRow(rowCount - 1);
            rowCount--;
        }
        //Clearing the address textarea
        $('#SupplierName').val(' ');        
        $.ajax({
            type: "POST",
            url: `/RejectionNote/BindInwardDetails?id=` + id,
            data: "{ }",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {                                
                $('#PO_Id').val(result[0].PO_Id);
                $('#PONumber').val(result[0].PONumber);
                $('#SupplierName').val(result[0].SupplierName);
                $('#SupplierID').val(result[0].SupplierID); /// Rahul added SupplierID 10-01-2023.

                var ColCount = result.length

                //===================Create dynamic table for binding Item details====================//
                var table = document.getElementById('ItemTable');
                for (var j = 1; j < result.length; j++) {
                    //debugger
                    var rowCount = table.rows.length;
                    var cellCount = table.rows[0].cells.length;
                    var row = table.insertRow(rowCount);
                    for (var i = 0; i < cellCount; i++) {
                        var cell = 'cell' + i;
                        cell = row.insertCell(i);
                        if (i == 0) {                            
                            cell.setAttribute("id", "ItemName_" + j);
                            cell.innerHTML = result[j].Item_Name;
                        }
                        else if (i == 1) {
                            cell.setAttribute("id", "ItemCode_" + j);
                            cell.innerHTML = result[j].Item_Code;
                        }
                        else if (i == 2) {
                            cell.setAttribute("id", "ItemUnitPrice_" + j);
                            cell.innerHTML = result[j].ItemUnitPrice + " " + result[j].CurrencyName;
                        }
                        else if (i == 3) {
                            cell.setAttribute("id", "ItemUnit_" + j);
                            cell.innerHTML = result[j].ItemUnit; ///update pending
                        }
                        else if (i == 4) {
                            cell.setAttribute("id", "ItemQty" + j);
                            cell.innerHTML = result[j].TotalQuantity + " " + result[j].ItemUnit; 
                        }
                        else if (i == 5) {
                            cell.setAttribute("id", "InwardQuantity_" + j); 
                            cell.innerHTML = result[j].InwardQuantity + " " + result[j].ItemUnit;
                        }
                        else if (i == 6) {
                            cell.setAttribute("id", "RejectedQuantity_" + j);
                            cell.innerHTML = result[j].RejectedQuantity;
                        }
                        else if (i == 7) {
                            cell.setAttribute("id", "QuantityTookForSorting_" + j); 
                            cell.innerHTML = result[j].QuantityTookForSorting + " " + result[j].ItemUnit;
                        }
                        else if (i == 8) {
                            cell.setAttribute("id", "WastageQuantityInPercentage_" + j); 
                            cell.innerHTML = result[j].WastageQuantityInPercentage.toFixed(4);
                        }
                        else if (i == 9) {
                            cell.setAttribute("id", "Remarks_" + j); 
                            cell.innerHTML = result[j].Remarks;                            
                        }
                        else if (i == 10) {
                            var t7 = document.createElement("input");
                            t7.id = "ItemID" + j;
                            t7.setAttribute("value", result[j].ItemId);
                            t7.setAttribute("disabled", "true");
                            t7.setAttribute("class", "d-none");
                            cell.appendChild(t7);
                            cell.setAttribute("style", "display:none"); //Rahul added 12-01-2023.
                        }
                        else if (i == 11) {
                            var t7 = document.createElement("input");
                            t7.id = "ItemTaxValue" + j;
                            t7.setAttribute("value", result[j].ItemTaxValue);
                            t7.setAttribute("disabled", "true");
                            t7.setAttribute("class", "d-none");
                            cell.appendChild(t7);
                            cell.setAttribute("style", "display:none"); //Rahul added 12-01-2023.
                        }
                    }

                }
            }
        });
    }

    function createJson() {
        debugger
        var table = document.getElementById('ItemTable');
        var rowCount = table.rows.length;
        var i = 1;
        InwardQuantities = "[";
        //BalanceQuantities = ""; 
        for (i = 1; i < rowCount; i++) {            
            var cellData = document.getElementById("ItemName_" + i);
            var ItemName = cellData.innerHTML;
                        
            var cellData = document.getElementById("ItemCode_" + i);
            var ItemCode = cellData.innerHTML;

            var cellData = document.getElementById("ItemUnitPrice_" + i);
            var UnitPrice = cellData.innerHTML.split(' ');
            var CurrencyName = UnitPrice[1]; UnitPrice = UnitPrice[0];
                        
            var cellData = document.getElementById("ItemUnit_" + i);
            var Unit = cellData.innerHTML;

            var cellData = document.getElementById("ItemQty" + i);
            var POQty = cellData.innerHTML.split(' ');
            var Unit = POQty[1]; POQty = POQty[0];

            var cellData = document.getElementById("InwardQuantity_" + i);
            var InwQty = cellData.innerHTML.split(' ');
            var Unit = InwQty[1]; InwQty = InwQty[0];
                        
            var cellData = document.getElementById("RejectedQuantity_" + i);
            var RejectedQuantity = cellData.innerHTML;

            var cellData = document.getElementById("QuantityTookForSorting_" + i);
            var QtyTookForSrt = cellData.innerHTML.split(' ');
            var Unit = QtyTookForSrt[1]; QtyTookForSrt = QtyTookForSrt[0];
                        
            var cellData = document.getElementById("WastageQuantityInPercentage_" + i);
            var WastageQuantityInPercentage = cellData.innerHTML;

            var cellData = document.getElementById("Remarks_" + i);
            var Remarks = cellData.innerHTML; 

            var ItemID = $('#ItemID' + i).val();
            var Tax = $('#ItemTaxValue' + i).val(); Tax = Tax.split(" "); Tax = Tax[0];
            
            InwardQuantities = InwardQuantities + "{\"Item_Name\": \"" + ItemName + "\", \"Item_Code\": \"" + ItemCode + "\",\"ItemUnitPrice\": "
                + UnitPrice + ", \"ItemUnit\": \"" + Unit + "\",\"TotalQuantity\": " + POQty + ",\"InwardQuantity\":" + InwQty + ",\"RejectedQuantity\": "
                + RejectedQuantity + ", \"QtyTookForSrt\": " + QtyTookForSrt + ",\"WastageQuantityInPercentage\": "
                + WastageQuantityInPercentage + ",\"Remarks\": \"" + Remarks + "\",\"ItemId\":" + ItemID + ",\"ItemTaxValue\": "
                + Tax + ", \"CurrencyName\": \"" + CurrencyName + "\"";
                   
            
            if (i == (rowCount - 1))
                InwardQuantities = InwardQuantities + "}";
            else
                InwardQuantities = InwardQuantities + "},";
        }
        InwardQuantities = InwardQuantities + "]";
        //console.log("InwardQuantities: ", InwardQuantities)
        //$('#InwardQuantities').val();        
    }

    function SetInwardQty() {
        createJson();        
        $('#InwardQuantities').val(InwardQuantities);
        //alert($('#InwardQuantities').val());        
    }

</script>

@Html.Raw(TempData["Success"])
