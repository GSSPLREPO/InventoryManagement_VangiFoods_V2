@model InVanWebApp_BO.StockMasterBO
@{
    ViewBag.Title = "ItemLedgerReport"; 
    Layout = "~/Views/Shared/MainMaster.cshtml";
}
<html>
<head>
    <title>Item Ledger Report</title>
    <link href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css" type="text/css" />
</head>
<body>
    <div class="content-wrapper" runat="server" id="divPanel1">
        <div class="page-header" style="height:5px;">
            <h4 class="page-title">Item Ledger Report</h4>
            <nav aria-label="breadcrum">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <i class="fa fa-home"></i>&nbsp;<a href="@Url.Action("ReorderPointOfStocks","Dashb_RTWarehouseWiseStock")">Reports</a>
                    </li>
                    <li class="breadcrumb-item active">Item Ledger Report</li>
                </ol>
            </nav>
        </div>
        <hr />
        <div class="panel-body">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-body">
                            <div style="padding-top:15px;">

                                <div class="row">
                                    <div class="col-md-2">
                                        <label>From Date:</label>
                                        <span style="color:red">*</span>
                                    </div>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(model => model.fromDate, "{0:yyyy-MM-dd}", new { @id = "fromDate", @class = "datepicker form-control form-control-sm", @type = "date", onchange = "OnChangedFromDate()", @max = DateTime.Now.ToString("yyyy-MM-dd") })
                                        @Html.ValidationMessageFor(model => model.fromDate, "", new { id = "fromDateValidate", @class = "col-form-label error mt-2 text-danger" })
                                    </div>
                                    <div class="col-md-2">
                                        <label>To Date:</label>
                                        <span style="color:red">*</span>
                                    </div>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(model => model.toDate, "{0:yyyy-MM-dd}", new { @id = "toDate", @class = " datepicker form-control form-control-sm", @type = "date", onchange = "OnChangedToDate()", @max = DateTime.Now.ToString("yyyy-MM-dd") })
                                        @Html.ValidationMessageFor(model => model.toDate, "", new { id = "toDateValidate", @class = "col-form-label error mt-2 text-danger" })
                                    </div>
                                    <div class="col-md-2">
                                        <button id="btnGo" type="button" value="Go" name="Go" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b);">Go</button>
                                        <a id="ExportPdf" href="@Url.Action("ExprotAsPDFForItemLedgerReport", "Report")"> <img src="~/Theme/MainContent/images/ICON.png.png" style="width:45px;height:45px;padding-top:1px" /> </a>
                                        <a id="ExportExcel" href="@Url.Action("ExportAsExcelForItemLedgerReport", "Report")"> <img src="~/Theme/MainContent/images/Excel_Icon_04.png" style="width:45px;height:45px;padding-top:1px" /> </a>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-2 ms-1">
                                        <label>Item:</label>
                                        <span style="color:red">*</span> 
                                    </div>
                                    <div class="col-md-3">
                                        @Html.DropDownList("Item", (IEnumerable<SelectListItem>)ViewData["Item"], "--ALL--", new { @class = "form-control", @id = "ItemId", onchange = "SelectedIndexChangedItem()" })
                                        @Html.ValidationMessage("Item", "", new { id = "ItemValidate", @class = "col-form-label error mt-2 text-danger" })
                                    </div>

                                    <div class="col-md-2 ms-1">
                                        <label>Location:</label>
                                        <span style="color:red">*</span>
                                    </div>
                                    <div class="col-md-3">
                                        @Html.DropDownList("LocationName", (IEnumerable<SelectListItem>)ViewData["WearhouseLocation"], "--Select--", new { @class = "form-control DropdownRegular", @id = "LocationNameId", onchange = "SelectedIndexChangedItem()" })
                                        @Html.ValidationMessage("LocationName", "", new { id = "LocationNameValidate", @class = "col-form-label error mt-2 text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-2 ms-1">
                                        <label>Transaction Type:</label>
                                        <span style="color:red">*</span>
                                    </div>
                                    <div class="col-md-3">
                                        @*@Html.DropDownList("TransactionType", (IEnumerable<SelectListItem>)ViewData["TransactionType"], "--Select--", new { @class = "form-control DropdownRegular", @id = "TransactionTypeId", onchange = "SelectedIndexChangedTransactionType($(this).val())" })*@
                                        @*@Html.ValidationMessage("TransactionType", "", new { id = "TransactionTypeValidate", @class = "col-form-label error mt-2 text-danger" })*@
                                        @Html.DropDownListFor(model => model.TransactionType, new List<SelectListItem>{
                                        new SelectListItem{ Text="All", Value = "All" },
                                        new SelectListItem{ Text="Purchase", Value = "Purchase" },
                                        new SelectListItem{ Text="Consumption", Value = "Consumption" },
                                        new SelectListItem{ Text="ProductionReturn", Value = "ProductionReturn" },
                                        new SelectListItem{ Text="Rejection", Value = "Rejection" },
                                        new SelectListItem{ Text="StockTransfer", Value = "StockTransfer" },
                                        new SelectListItem{ Text="StockAdjustment", Value = "StockAdjustment" }, 
                                        new SelectListItem{ Text="FinishGoodSeries", Value = "FinishGoodSeries" }, 
                                        new SelectListItem{ Text="PostProductionRejection", Value = "PostProductionRejection" }
                                        }, new { @class = "form-control DropdownRegular", @id = "TransactionTypeId", onchange = "SelectedIndexChangedTransactionType($(this).val())" })
                                        @Html.ValidationMessage("TransactionType", "", new { id = "TransactionTypeValidate", @class = "col-form-label error mt-2 text-danger" })
                                    </div>
                                    <div class="col-md-3 d-none">
                                        @Html.TextBoxFor(model => model.TransactionType, new { @class = "form-control form-control-sm", Value = "", @readonly = "readonly" })
                                    </div>
                                </div>
                                <br />
                                <div style="margin-top:25px;">
                                    <table class="ui celled table table-striped table-bordered hover table-sm display nowrap" id="tblInward" style="width:100%">
                                        <thead>
                                            <tr>
                                                <th class="text-wrap" style="text-align:center">Sr.No.</th>
                                                <th class="text-wrap" style="text-align:center">Transaction Date</th>
                                                <th class="text-wrap" style="text-align:center">Transaction Number</th>
                                                <th class="text-wrap" style="text-align:center">Transaction Type</th>
                                                @*<th class="d-none" style="text-align:center">ItemId</th>*@
                                                <th class="text-wrap" style="text-align:center">Item Code</th>
                                                <th class="text-wrap" style="text-align:center">Item Name</th>
                                                <th class="text-wrap" style="text-align:center">Opening Stock Quantity</th>
                                                <th class="text-wrap" style="text-align:center">Stock In Quantity</th>
                                                <th class="text-wrap" style="text-align:center">Stock Out Quantity</th>
                                                <th class="text-wrap" style="text-align:center">Closing Stock Quantity</th>
                                                @*<th style="text-align:center">Available Date</th>*@
                                            </tr>
                                        </thead>
                                        <tbody class="text-center"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

</html>

@Html.Raw(TempData["Success"])

@section scripts{

    @*<script src="~/DataTables-1.10.18/js/jquery.dataTables.min.js"></script>
        <link href="~/DataTables-1.10.18/css/jquery.dataTables.min.css" rel="stylesheet" />*@
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">
    <link href="~/Theme/MainContent/css/CustomDropdown.css" rel="stylesheet" />

    <script type="text/javascript">

        $(document).ready(function () {
            $('#ExportPdf').hide();
            $('#ExportExcel').hide();
            $('#tblInward').hide();
            createCustomDropdown_ItemId();
        });

        //Vedant added 'function createCustomDropdown()' 04-07-2023. start  
        function createCustomDropdown_ItemId() {
            $('select#ItemId').each(function (i, select) {
                if (!$(this).next().hasClass('dropdown-select')) {
                    $('#ItemId').removeClass('form-control');
                    $(this).after('<div id="divItemId" class="dropdown-select wide d-flex align-items-center' + ($(this).attr('class') || '') + '" tabindex="0"><span class="current"></span><div class="list"><ul></ul></div></div>');
                    var dropdown = $(this).next();
                    var options = $(select).find('option');
                    var selected = $(this).find('option:selected');
                    dropdown.find('.current').html(selected.data('display-text') || selected.text());
                    options.each(function (j, o) {
                        var display = $(o).data('display-text') || '';
                        dropdown.find('ul').append('<li class="option ' + ($(o).is(':selected') ? 'selected' : '') + '" data-value="' + $(o).val() + '" data-display-text="' + display + '">' + $(o).text() + '</li>');
                    });
                }
            });
            $('#divItemId.dropdown-select ul').before('<div class="dd-search"><input id="txtSearchValueItemId" autocomplete="off" onkeyup="filterItemId()" class="dd-searchbox" type="text" placeholder="Search for list" ><br />&nbsp;<span id="faSearch"><i class="fas fa-search"></i></span></div>');
        }
        function filterItemId() {
            var valThis = $('#txtSearchValueItemId').val();
            $('.dropdown-select ul > li').each(function () {
                var text = $(this).text();
                (text.toLowerCase().indexOf(valThis.toLowerCase()) > -1) ? $(this).show() : $(this).hide();
            });
        };

        // Event listeners

        // Open/close
        $(document).on('click', '.dropdown-select', function (event) {
            if ($(event.target).hasClass('dd-searchbox')) {
                return;
            }
            $('.dropdown-select').not($(this)).removeClass('open');
            $(this).toggleClass('open');
            if ($(this).hasClass('open')) {
                $(this).find('.option').attr('tabindex', 0);
                $(this).find('.selected').focus();
            } else {
                $(this).find('.option').removeAttr('tabindex');
                $(this).focus();
            }
        });
        // Close when clicking outside
        $(document).on('click', function (event) {
            if ($(event.target).closest('.dropdown-select').length === 0) {
                $('.dropdown-select').removeClass('open');
                $('.dropdown-select .option').removeAttr('tabindex');
            }
            event.stopPropagation();
        });
        // Option click
        $(document).on('click', '.dropdown-select .option', function (event) {
            $(this).closest('.list').find('.selected').removeClass('selected');
            $(this).addClass('selected');
            var text = $(this).data('display-text') || $(this).text();
            $(this).closest('.dropdown-select').find('.current').text(text);
            $(this).closest('.dropdown-select').prev('select').val($(this).data('value')).trigger('change');
        });

        // Keyboard events
        $(document).on('keydown', '.dropdown-select', function (event) {
            var focused_option = $($(this).find('.list .option:focus')[0] || $(this).find('.list .option.selected')[0]);
            // Space or Enter
            //if (event.keyCode == 32 || event.keyCode == 13) {
            if (event.keyCode == 13) {
                if ($(this).hasClass('open')) {
                    focused_option.trigger('click');
                } else {
                    $(this).trigger('click');
                }
                return false;
                // Down
            } else if (event.keyCode == 40) {
                if (!$(this).hasClass('open')) {
                    $(this).trigger('click');
                } else {
                    focused_option.next().focus();
                }
                return false;
                // Up
            } else if (event.keyCode == 38) {
                if (!$(this).hasClass('open')) {
                    $(this).trigger('click');
                } else {
                    var focused_option = $($(this).find('.list .option:focus')[0] || $(this).find('.list .option.selected')[0]);
                    focused_option.prev().focus();
                }
                return false;
                // Esc
            } else if (event.keyCode == 27) {
                if ($(this).hasClass('open')) {
                    $(this).trigger('click');
                }
                return false;
            }
        });
                    //Vedant added 'function createCustomDropdown()' 04-07-2023. end

        function SelectedIndexChangedItem() {
            $('#ItemValidate').hide();
        }

        function SelectedIndexChangedTransactionType(id) {
            //$('#valMsgTransactionType').hide();

            var selectedOptionTransactionType, TransactionType;
            selectedOptionTransactionType = document.getElementById("TransactionTypeId").selectedIndex;
            TransactionType = document.getElementById("TransactionTypeId").options[selectedOptionTransactionType].innerText;
            document.getElementById("TransactionType").value = TransactionType;
        }

        function OnChangedFromDate() {
            $('#fromDateValidate').hide();
        }

        function OnChangedToDate() {
            $('#toDateValidate').hide();
        }

        $("#btnGo").on('click', function () {
            var flag = 0;

            var fromDate = $("#fromDate").val();
            var toDate = $("#toDate").val();

            if (fromDate == null || fromDate == "") {
                $('#fromDateValidate').text('Select from date!');
                $('#fromDateValidate').show();
                $('#fromDate').focus();
                return;
            }

            if (toDate == null || toDate == "") {
                $('#toDateValidate').text('Select to date!');
                $('#toDateValidate').show();
                $('#toDate').focus();
                return;
            }

            if (fromDate > toDate) {
                alert('Invalid Date! To date is less than from date!');
                $('#fromDate').focus();
                return;
            }

            var CheckItem = $('#ItemId').val();
            if (CheckItem == '' || CheckItem == null) {
                CheckItem = 0;
            }
            else {
                SelectedIndexChangedItem();
            }

            $('#ExportPdf').show();
            $('#ExportExcel').show();
            $('#tblInward').show();

            var item = CheckItem;

            //if (item == '' || item == nul) {
            //    item = 0;
            //}

            //var locationId = 1; 
            //var transactionType = 'GRN';

            var locationId = $('#LocationNameId').val();
            if (locationId == '' || locationId == null) {
                locationId = 0;
            }
            
            var transactionType = $('#TransactionTypeId').val();
            //var transactionType = $('#TransactionTypeId').val();
            //if (transactionType == '' || transactionType == null) {
            //    transactionType = 0;
            //}


            $('#tblInward').dataTable().fnDestroy();
            var t = $('#tblInward').DataTable({
                //"processing": true, // for show progress bar
                "serverSide": false, // for process server side
                "filter": true, // this is for disable filter (search box)
                "sAjaxSource": "/Report/GetItemLedgerReportData?fromDate=" + fromDate + "&toDate=" + toDate + "&ItemId=" + item + "&LocationId=" + locationId + "&TransactionType=" + transactionType,
                "initComplete": function (settings, json) {
                    var result = JSON.stringify(json);
                    flag = parseFloat(result.length);

                    if (flag > 11) {
                        $('#ExportPdf').show();
                        $('#ExportExcel').show();
                    }
                    else {
                        $('#ExportPdf').hide();
                        $('#ExportExcel').hide();
                    }
                },
                "pageLength": 10,
                "scrollX": true,
                "columns": [
                    { "data": "SrNo", "autoWidth": true },                    
                    { "data": "GRNDate", "autoWidth": true },
                    { "data": "PO_Number", "autoWidth": true },
                    { "data": "TransactionType", "autoWidth": true },
                    //{ "data": "ItemID", "autoWidth": true },
                    { "data": "Item_Code", "autoWidth": true },
                    { "data": "ItemName", "autoWidth": true },
                    { "data": "OpeningStockQuantity", "autoWidth": true },
                    { "data": "StockInQty", "autoWidth": true },
                    { "data": "StockOutQty", "autoWidth": true },
                    { "data": "AvlQty", "autoWidth": true },
                    /*{ "data": "StockRejectionQty", "autoWidth": true },*/
                    /*{ "data": "AvlDate", "autoWidth": true },*/
                ]
            });
            t.on('order.dt search.dt', function () {
                let i = 1;

                t.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
                    this.data(i++);
                });
            }).draw();

        });

    </script>
}

