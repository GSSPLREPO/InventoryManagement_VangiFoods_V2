@model InVanWebApp_BO.RFQ_VendorDetailsBO
@{
    ViewBag.Title = "ViewRFQSupplierDetails";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>RFQ Vendor Detail</title>
    <style>
        html2canvas-container {
            width: 3000px !important;
            height: 2000px !important;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm("GeneratePO", "RequestForQuotation", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.RFQ_VendorDetailsId)
        @Html.HiddenFor(model => model.VendorsID)
        @Html.HiddenFor(model => model.RequestForQuotationId)
        @Html.HiddenFor(model => model.CurrencyID)
        @Html.HiddenFor(model => model.CurrencyName)
        @Html.HiddenFor(model => model.CurrencyPrice)
        @Html.HiddenFor(model => model.LocationId)
        @Html.HiddenFor(model => model.LocationName)
        @Html.HiddenFor(model => model.DeliveryAddress)
        @Html.HiddenFor(model => model.Remarks)
        @Html.HiddenFor(model => model.Address)
        @Html.HiddenFor(model => model.IndentID)
        @Html.HiddenFor(model => model.IndentNumber)

        @Html.AntiForgeryToken()
        <div class="row" id="printV" width="1000px">
            <div class="col-md-12  grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <img src="~/Theme/MainContent/images/logo-mini.png" alt="client-logo" class="align-self-center" style="width:80px;height:50px;">
                            <h3 class="card-title font-weight-bold align-self-center col-4 mb-0" style="font-size: 16pt;">RFQ Vendor Detail</h3>

                            <div class="col">
                                <div class="col-md-12">
                                    <img src="~/Theme/MainContent/images/ICON.png.png" id="btnExport" class="float-right" style="width:45px;height:45px" />
                                </div>
                            </div>
                        </div>

                        <hr />
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-2">
                                    <label class="font-weight-bold">RFQ Number</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.DisplayFor(model => model.RFQNO)
                                    @Html.HiddenFor(model => model.RFQNO)
                                </div>
                                <br />
                                <div class="col-md-2">
                                    <label class="font-weight-bold">Vendor</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.DisplayFor(model => model.CompanyName)
                                    @Html.HiddenFor(model => model.CompanyName)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <label class="font-weight-bold">Indent Number</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.DisplayFor(model => model.IndentNumber)
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <label class="font-weight-bold">Document Date</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.Date, "{0:yyyy-MM-dd}", new { style = "border:none; color:black; padding-top:1%; padding-left: 0.05%;font-size: 100%;", @readonly = "readonly" })
                                </div>
                                <div class="col-md-2">
                                    <label class="font-weight-bold">Delivery Date</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.DeliveryDate, "{0:yyyy-MM-dd}", new { style = "border:none; color:black; padding-top:1%; padding-left: 0.05%;font-size: 100%;", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-2">
                                    <label class="font-weight-bold">Client Address</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.DisplayFor(model => model.Address)
                                </div>
                            </div>
                            <br />
                            <hr />
                            <div class="row">
                                <div class="col-md-12">
                                    <Center><h5 class="font-weight-bold">Item Details</h5></Center>
                                    <hr />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="row">
                                        <div class="table-sorter-wrapper col-lg-12 table-responsive">
                                            <table class="table table-striped" id="submissionTable">
                                                <thead>
                                                    <tr>
                                                        <th class="sortStyle text-wrap">Select Item for PO</th>
                                                        <th class="sortStyle d-none">ItemID</th>
                                                        <th class="sortStyle">Item Code</th>
                                                        <th class="sortStyle">Item</th>
                                                        <th class="sortStyle">Quantity</th>
                                                        <th class="sortStyle">Units</th>
                                                        <th class="sortStyle">Price</th>
                                                        <th class="sortStyle">Currency</th>
                                                        <th class="sortStyle">Item Tax</th>
                                                        <th class="sortStyle text-wrap">Total before tax</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="myTableBody">
                                                    @{ int c = 1;
                                                        foreach (var item in Model.rfqVendorItemDetails)
                                                        {
                                                            <tr id="tablerow_@c">
                                                                <td>
                                                                    @Html.CheckBox("ItemSelected", new { id = "SelectedItem_" + c })
                                                                    @*<label>@c.</label>*@
                                                                </td>
                                                                <td class="d-none">@Html.HiddenFor(x => item.Item_ID, new { id = "ItemID_" + c })</td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => item.Item_Code, new { id = "ItemCode_" + c, style = "border:none;background: none;width:auto;", @readonly = "readonly" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => item.ItemName, new { id = "ItemName_" + c, style = "border:none;background: none;width:auto;", @readonly = "readonly" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => item.ItemQuantity, new { id = "ItemQuantity_" + c, style = "border:none;background: none;", @readonly = "readonly" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => item.ItemUnit, new { id = "ItemUnit_" + c, style = "border:none;background: none;width:auto;", @readonly = "readonly" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => item.ItemUnitPrice, new { id = "ItemUnitPrice_" + c, style = "border:none;background: none;", @readonly = "readonly" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => item.CurrencyName, new { id = "CurrencyName_" + c, style = "border:none;background: none;", @readonly = "readonly" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => item.ItemTaxValue, new { id = "itemTax_" + c, style = "border:none;background: none;", @readonly = "readonly" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => item.TotalItemCost, new { id = "totalItemCost_" + c, style = "border:none;background: none;", @readonly = "readonly" })
                                                                </td>
                                                            </tr>
                                                            { c++; }
                                                        }

                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <br />
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.TxtItemDetails, new { style = "display:none" })
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-5"></div>
                                <div class="col-md-7">
                                    <hr />
                                    <Center><h5 class="font-weight-bold">Payment Details</h5></Center>
                                    <hr />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-5"></div>
                                <div class="col-md-7">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="font-weight-bold">Total (before tax): </label>&emsp;
                                        </div>
                                        <div class="col-md-6">
                                            <input class="text-right" id="TotalBeforeTax" name="TotalBeforeTax" style="border:none;" readonly="readonly" />
                                            @Html.DisplayFor(model => model.CurrencyName, new { @class = "font-weight-bold text-left" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="font-weight-bold">Total tax: </label>&emsp;
                                        </div>
                                        <div class="col-md-6">
                                            <input class="text-right" id="TotalTax" name="TotalTax" style="border:none;" readonly="readonly" />
                                            @Html.DisplayFor(model => model.CurrencyName, new { @class = "font-weight-bold text-left" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="font-weight-bold">Total (after tax):</label>&emsp;
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => model.TotalAfterTax, new { @class = "text-right", style = "border:none;", @readonly = "readonly" })
                                            @Html.DisplayFor(model => model.CurrencyName, new { @class = "font-weight-bold text-left" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="font-weight-bold">Grand Total:</label>&emsp;
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => model.GrandTotal, new { @class = "text-right", style = "border:none;", @readonly = "readonly" })
                                            @Html.DisplayFor(model => model.CurrencyName, new { @class = "font-weight-bold text-left" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="font-weight-bold">Advanced To Pay:</label>&emsp;
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(model => model.AdvancedPayment, new { @class = "text-right", style = "border:none;", @readonly = "readonly" })
                                            @Html.DisplayFor(model => model.CurrencyName, new { @class = "font-weight-bold text-left" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <br />
                            <div class="col d-flex justify-content-end" style="margin-left: auto;">
                                <div class="row">
                                    <div class="col">
                                        <button type="submit" id="btnSave" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;" onclick="SaveBtnClick()">Generate PO</button>
                                    </div>
                                    <div class="col">
                                        <a href="@Url.Action("Index", "RequestForQuotation")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;" id="btnBack">
                                            Back To List
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</body>
</html>

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script src="~/Theme/MainContent/js/jquery.min.js"></script>
<script src="~/Theme/MainContent/jspdf.min.js_1.5.3/unpkg/jspdf.min.js"></script>
<script src="~/Theme/MainContent/jspdf.min.js_1.5.3/unpkg/html2canvas.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        CalculateTotalBeforeTax();
    });

    function SaveBtnClick() {
        createJson();
        if (TxtItemDetails == "[]]") {
            alert("No item is selected! PO cannot be generated!");
            event.preventDefault();
            return;
        }
    }

    function CalculateTotalBeforeTax() {
        var length = document.getElementById("submissionTable").rows.length;
        length = parseFloat(length) - 1;
        var total = 0;
        var totalTax = 0;
        var i = 1;
        while (i <= length) {
            var temp = document.getElementById("totalItemCost_" + i).value;
            var tempTotalTax = document.getElementById("itemTax_" + i).value;
            total = parseFloat(temp) + total;

            tempTotalTax = Math.round((parseFloat(tempTotalTax) / 100) * parseFloat(temp));
            totalTax = parseFloat(tempTotalTax) + totalTax;
            i++;
        }
        $('#TotalBeforeTax').val(total);
        $('#TotalTax').val(totalTax);
    }

    $('#btnExport').click(function () {
        var printD = document.getElementById("printV");
        $("#btnExport").hide();
        $("#btnBack").hide();
        $("#btnSave").hide();
        // $("#btnPrint").hide();
        html2canvas(printD).then(function (canvas) {

            var img = canvas.toDataURL("image/png", 1.0);

            var doc = new jsPDF('p', 'pt', 'a4');

            var specialElementHandlers = {
                '#editor': function (element, renderer) {
                    return true;
                }
            };

            doc.addImage(img, 'JPEG', 5, 5, 580, 480);
            doc.fromHTML(printD, 15, 15, {
                'width': 200,
                // 'margin':[10,60,40,20],
                'elementHandlers': specialElementHandlers
            });
            var currentDate = new Date();
            //var time = getTime();
            var today = new Date();
            var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
            console.log(time);
            var today = formatDate(currentDate);
            var pdfName = (document.getElementById('RFQNO').value) + '_' + (document.getElementById('CompanyName').value) + '_';
            doc.save(pdfName + today + '_' + time + '.pdf');
            $("#btnExport").show();
            $("#btnBack").show();
            $("#btnSave").show();
            //$("#btnPrint").show();
        });
        //window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);

    });

    function formatDate(date) {
        // alert(date);
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;
        return [day, month, year].join('-');
        //return [year, month, day].join('-');
    }

    //==================createJson Set value in txtItemDetails onCick of Save/Update button======--------
    function createJson() {
        var table = document.getElementById('submissionTable');
        var rowCount = table.rows.length;
        var i = 1, flag = 0;
        TxtItemDetails = "[";
        while (i < rowCount) {
            var ItemSelected = false;
            if ($('#SelectedItem_' + i).is(":checked")) {
                ItemSelected = true;
            }
            var ItemID = (document.getElementById("ItemID_" + i)).value;
            var ItemCode = (document.getElementById("ItemCode_" + i)).value;
            var ItemName = (document.getElementById("ItemName_" + i)).value;
            var RequiredQty = $("#ItemQuantity_" + i).val();
            RequiredQty = (RequiredQty == null || RequiredQty == '') ? 0 : RequiredQty;

            var Unit = (document.getElementById("ItemUnit_" + i)).value;
            var ItemUnitPrice = (document.getElementById("ItemUnitPrice_" + i)).value;
            var CurrencyName = (document.getElementById("CurrencyName_" + i)).value;
            var itemTax = (document.getElementById("itemTax_" + i)).value;
            var totalItemCost = $("#totalItemCost_" + i).val();

            if (ItemSelected == false) {
                i++;
                continue;
            }

            TxtItemDetails = TxtItemDetails + "{\"ItemId\":" + ItemID + ", \"Item_Code\":\"" + ItemCode +
                "\", \"ItemName\": \"" + ItemName + "\", \"RequiredQty\": " + RequiredQty +
                ", \"ItemUnit\": \"" + Unit + "\", \"ItemUnitPrice\": " + ItemUnitPrice +
                ", \"CurrencyName\": \"" + CurrencyName + "\",\"ItemTax\":" + itemTax + ",\"totalItemCost\":"
                + totalItemCost + ",\"ItemSelected\":" + ItemSelected;

            if (i == (rowCount - 1)) {
                TxtItemDetails = TxtItemDetails + "}";
                flag = 1;
            }

            else
                TxtItemDetails = TxtItemDetails + "},";

            i++;
        }
        TxtItemDetails = TxtItemDetails + "]"
        var tempTxt = TxtItemDetails.split(',]')[0];

        if (flag == 0)
            TxtItemDetails = tempTxt + "]";

        $('#TxtItemDetails').val(TxtItemDetails);
    }
    //==================createJson Set value in txtItemDetails onCick of Save/Update button end======--------
</script>