@model InVanWebApp_BO.StockAdjustmentBO
@{
    ViewBag.Title = "AddStockadjustment";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}


@using (Html.BeginForm("AddStockadjustment", "StockAdjustment"))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            <h4>Stock Adjustment</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Document Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.DocumentNo, new { @class = "form-control form-control-sm", Value = ViewData["DocumentNo"], @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.DocumentNo, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Document Date")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.DocumentDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.DocumentDate, "", new { @class = "error mt-2 text-danger" })
                </div>

            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Location")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.LocationId, (IEnumerable<SelectListItem>)ViewData["LocationList"], "---Select---", new { @class = "form-control", onchange = "SelectedIndexChangedLocation(id)" })
                    @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "error mt-2 text-danger" })
                    @Html.HiddenFor(model => model.LocationName)
                </div>
                @*<div class="col-md-2">
                    @Html.Label("Item")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownList("ItemId", (IEnumerable<SelectListItem>)ViewData["ItemList"], "---Select---", new { @class = "form-control", onchange = "SelectedIndexChangedLocation(id)" })
                </div>*@
            </div>
            <br />
            <hr />
            <div class="row">
                <h4 style="color:darkcyan">Item Details</h4>
            </div>
            <hr />

            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group">
                            <div class="row">
                                <div class="table-sorter-wrapper col-lg-12 table-responsive">
                                    <table class="table table-striped" id="submissionTable">
                                        <thead>
                                            <tr style="background-color:rgba(0, 0, 0, 0.05);">
                                                @*<th class="sortStyle">Sr. No.</th>*@
                                                <th class="sortStyle">Item Code</th>
                                                <th class="sortStyle d-n d-none">Item Id</th>
                                                <th class="sortStyle">Item Name</th>
                                                <th class="sortStyle">Price (Per Unit)</th>
                                                <th class="sortStyle">Currency</th>
                                                <th class="sortStyle">Available Stock</th>
                                                <th class="sortStyle">UOM</th>
                                                <th class="sortStyle">Physical Stock</th>
                                                <th class="sortStyle">Difference</th>
                                                <th class="sortStyle">Price (Adjusted Difference)</th>
                                                <th class="sortStyle">Comments</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(model => model.TxtItemDetails, new { style = "display:none" })
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <div class="row">
                <div class="col-md-2 mb-1">
                    @Html.Label("Remarks")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <hr />
            <div class="col d-flex justify-content-end" style="margin-left: auto;">
                <div class="row">
                    <div class="col">
                        <button type="submit" id="btnSave" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b); float:right;" onclick="SaveBtnClick()">Save</button>
                    </div>
                    <div class="col">
                        <a href="@Url.Action("Index", "StockAdjustment")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                            Back To List
                        </a>
                    </div>
                </div>
            </div>
            @Html.HiddenFor(model => model.TxtItemDetails)
        </div>
    </div>
}
@Html.Raw(TempData["Success"])
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script src="https://cdn.jsdelivr.net/npm/table-to-json@1.0.0/lib/jquery.tabletojson.min.js" integrity="sha256-H8xrCe0tZFi/C2CgxkmiGksqVaxhW0PFcUKZJZo1yNU=" crossorigin="anonymous"></script>*@
}


<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<script type="text/javascript">
    //==================Set value in txtItemDetails onCick of Save/Update button======--------
    function SaveBtnClick() {
        var tableLength = document.getElementById('submissionTable').rows.length;
        var flag = 0, i = 1;
        if (tableLength > 1) {
            while (i < tableLength) {
                var PhyQty = document.getElementById("txtPhysicalStock_" + i).value;
                PhyQty = parseFloat(PhyQty);

                if (PhyQty != 0)
                    flag = 1;

                i++;
            }

            if (flag != 1) {
                alert("adjustment is not done! Cannot adjust the stock!");
                $('#btnSave').prop('disabled', true);
                return;
            }
            else
                $('#btnSave').prop('disabled', false);
        }
        var LocationName = $("#LocationId option:selected").text();
        $('#LocationName').val(LocationName);
        createJson();
       // alert(TxtItemDetails);
    };
    //==========end===============

    //=====================Onchange of PO===========================
    function SelectedIndexChangedLocation(id) {

        $('#btnSave').prop('disabled', false);

        //For deleting the rows of Item table if exist.

        var table = document.getElementById('submissionTable');
        var rowCount = table.rows.length;
        while (rowCount != '1') {
            var row = table.deleteRow(rowCount - 1);
            rowCount--;
        }

        var Location_ID = $("#LocationId").val();

        $.ajax({
            url: '/StockAdjustment/GetLocationStocksDetails',
            type: "POST",
            data: { id: Location_ID },
            success: function (result) {

                var table = document.getElementById('submissionTable');
                for (var j = 1; j < result.length; j++) {
                    var rowCount = table.rows.length;
                    var cellCount = table.rows[0].cells.length;
                    var row = table.insertRow(rowCount);
                    if (j % 2 == 0) {
                        row.setAttribute("style", "background-color:rgba(0, 0, 0, 0.05);");
                    }

                    for (var i = 0; i < cellCount; i++) {
                        var cell = 'cell' + i;
                        cell = row.insertCell(i);

                        if (i == 0) {
                            cell.innerHTML = result[j].Item_Code;
                            cell.setAttribute("id", "ItemCode_" + j);
                        }
                        else if (i == 1) {
                            cell.innerHTML = result[j].ItemId;
                            cell.setAttribute("class", "d-none");
                            cell.setAttribute("id", "ItemID_" + j);
                        }
                        else if (i == 2) {
                            cell.innerHTML = result[j].Item_Name;
                            cell.setAttribute("id", "ItemName_" + j);

                        }
                        else if (i == 3) {
                            cell.innerHTML = result[j].ItemUnitPrice;
                            cell.setAttribute("id", "ItemUnitPrice_" + j);
                        }
                        else if (i == 4) {
                            cell.innerHTML = result[j].CurrencyName;
                            cell.setAttribute("id", "CurrencyName_" + j);
                        }
                        else if (i == 5) {
                            cell.innerHTML = result[j].AvailableStock;
                            cell.setAttribute("id", "AvailableStock_" + j);                           
                        }
                        else if (i == 6) {

                            cell.innerHTML = result[j].ItemUnit;
                            cell.setAttribute("id", "ItemUnit_" + j);
                        }
                        else if (i == 7) {
                            var t5 = document.createElement("input");
                            t5.id = "txtPhysicalStock_" + j;
                            t5.setAttribute("onchange", "OnChangeQty($(this).val(),id)");
                            t5.setAttribute("value", "0");
                            t5.setAttribute("type", "number");
                            t5.setAttribute("onkeypress", "return isNumberKey(event)");
                            t5.setAttribute("maxlength", "8");
                            t5.setAttribute("class", "form-control form-control-sm");
                            cell.appendChild(t5);
                        }
                        else if (i == 8) {
                            var t5 = document.createElement("input");
                            t5.id = "txtDifference_" + j;
                            t5.setAttribute("readonly", "readonly");
                            t5.setAttribute("value", "0");
                            t5.setAttribute("class", "form-control form-control-sm");
                            cell.appendChild(t5);
                        }
                        else if (i == 9) {
                            var t5 = document.createElement("input");
                            t5.id = "txtTransferPrice_" + j;
                            t5.setAttribute("readonly", "readonly");
                            t5.setAttribute("value", "0");
                            t5.setAttribute("type", "number");
                            t5.setAttribute("class", "form-control form-control-sm");
                            cell.appendChild(t5);
                        }
                        else if (i == 10) {
                            var t5 = document.createElement("input");
                            t5.id = "txtRemarks_" + j;
                            t5.setAttribute("maxlength", "80");
                            t5.setAttribute("style", "width:auto;");
                            t5.setAttribute("class", "form-control form-control-sm");
                            cell.appendChild(t5);
                        }
                    }

                }
            },
            error: function (err) {
                alert('Not able to fetch indent item details!');

            }

        });
    }
    //=============End==============

    function OnChangeQty(value, id) {
        $('#btnSave').prop('disabled', false);
        var rowNo = id.split('_')[1];
        var avalQty = document.getElementById("AvailableStock_" + rowNo).innerHTML;
        value = parseFloat(value);
        avalQty = parseFloat(avalQty);

        var UnitPrice = document.getElementById("ItemUnitPrice_" + rowNo).innerHTML;
        var DiffQty = 0;

        if (value > avalQty) {
            DiffQty = value - avalQty;
            DiffQty = parseFloat(DiffQty);
            document.getElementById("txtDifference_" + rowNo).value="+" + DiffQty;

        }
        else {
            DiffQty = avalQty-value;
            DiffQty = parseFloat(DiffQty);
            document.getElementById("txtDifference_" + rowNo).value="-" + DiffQty;
        }

        var TransferPrice = (UnitPrice * DiffQty);
        document.getElementById("txtTransferPrice_" + rowNo).value=TransferPrice;
        document.getElementById("txtRemarks_" + rowNo).focus;
    }


    var TxtItemDetails = "";

    function createJson() {

        var table = document.getElementById('submissionTable');
        var rowCount = table.rows.length;
        var i = 1, flag=0;
        TxtItemDetails = "[";
        while (i <= rowCount - 1) {
            var ItemCode = (document.getElementById("ItemCode_" + i)).innerHTML;
            var ItemID = (document.getElementById("ItemID_" + i)).innerHTML;
            var ItemName = (document.getElementById("ItemName_" + i)).innerHTML;
            var PricePerUnit = (document.getElementById("ItemUnitPrice_" + i)).innerHTML;
            var CurrencyName = (document.getElementById("CurrencyName_" + i)).innerHTML;
            var AvailableStock = (document.getElementById("AvailableStock_" + i)).innerHTML;
            var Unit = (document.getElementById("ItemUnit_" + i)).innerHTML;

            var PhyQty = (document.getElementById("txtPhysicalStock_" + i)).value;
            var DiffQty = (document.getElementById("txtDifference_" + i)).value;
            var TransPrice = (document.getElementById("txtTransferPrice_" + i)).value;

            var Remarks = (document.getElementById("txtRemarks_" + i)).value;

            if (PhyQty == 0) {
                i++;
                continue;
            }
                
            TxtItemDetails = TxtItemDetails + "{\"Item_Code\":\"" + ItemCode + "\", \"ItemId\":" + ItemID +
                ", \"ItemName\": \"" + ItemName + "\", \"ItemUnitPrice\": " + PricePerUnit +
                ", \"CurrencyName\": \"" + CurrencyName + "\", \"AvlStock\": " + AvailableStock + ", \"ItemUnit\": \"" + Unit +
                "\", \"PhyQty\": " + PhyQty +",\"DiffQty\": " + DiffQty+
                ", \"TransPrice\": " + TransPrice + ",\"Remarks\": \"" + Remarks + "\"";
            
            if (i == (rowCount - 1)) {
                TxtItemDetails = TxtItemDetails + "}";
                flag = 1;
            }
            else
                TxtItemDetails = TxtItemDetails + "},";

            i++;
        }
        TxtItemDetails = TxtItemDetails + "]"
        var tempTxt = TxtItemDetails.split(',]')[0];

        if(flag==0)
            TxtItemDetails = tempTxt + "]";

        $('#TxtItemDetails').val(TxtItemDetails);
    }

    function isNumberKey(evt) {
        var keycode = (evt.which) ? evt.which : evt.keyCode;
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
        else {
            var parts = evt.srcElement.value.split('.');
            if (parts.length > 1 && keycode == 46)
                return false;
            else
                return true;
        }
        return true;
    }
</script>