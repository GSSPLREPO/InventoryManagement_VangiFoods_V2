@model InVanWebApp_BO.CompanyBO
@{
    ViewBag.Title = "Add Company";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-body">
            @*<div class="form-horizontal">*@
            <h4 class="card-title"><b>Add Company</b></h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="row">
                <div class="col-md-2">
                    <div class="form-check">
                        <label class="form-check-label">
                            <input type="checkbox" class="form-check-input" checked />Buyer
                            <i class="input-helper"></i>
                        </label>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-check">
                        <label class="form-check-label">
                            <input type="checkbox" class="form-check-input" />Supplier
                            <i class="input-helper"></i>
                        </label>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-check">
                        <label class="form-check-label">
                            <input type="checkbox" class="form-check-input" />Both
                            <i class="input-helper"></i>
                        </label>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.CompanyType, "", new { @class = "error mt-2 text-danger" })
            </div>
            <br />

            <div class="row">
                <div class="col-md-6">
                    @Html.Label("Company Name")
                    @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control", maxlength = "50", style = "height:38px" })
                    @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-6">
                    @Html.Label("Email ID")
                    @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control", type = "text", maxlength = "50", style = "height:38px" })
                    @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <button type="submit" class="btn btn-primary mr-2">Submit</button>
                    @Html.ActionLink("Back to List", "Index", new { @class = "font-weight-light" })

                </div>

            </div>
        </div>

    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
    <script type="text/javascript">
    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#Country_ID").change(function () {
            $("#State_ID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetStates")', // we are calling json method

                dataType: 'json',

                data: { id: $("#Country_ID").val() },
                // here we are get value of selected country and passing same value
                //as inputto json method GetStates.

                success: function (states) {
                // states contains the JSON formatted list
                // of states passed from the controller

                $.each(states, function (i, state) {
                $("#State_ID").append('<option value="' + state.Value + '">' +state.Text + '</option>');
                // here we are Iadding option for States

                });
                },
                error: function (ex) {
                alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        $("#State_ID").change(function () {
            $("#City_ID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCity")',
                dataType: 'json',
                data: { id: $("#State_ID").val() },
                success: function (citys) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    $.each(citys, function (i, city) {
                        $("#City_ID").append('<option value="'
                            + city.Value + '">'
                            + city.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve city.' + ex);
                }
            });
            return false;
        });
    });
    </script>*@

