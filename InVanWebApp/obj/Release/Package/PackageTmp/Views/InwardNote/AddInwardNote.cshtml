@model InVanWebApp_BO.InwardNoteBO
@{
    ViewBag.Title = "AddInwardNote";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}

@using (Html.BeginForm("AddInwardNote", "InwardNote", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            <h4>Add Inward Note</h4>
            <hr />
            @Html.ValidationSummary(true)

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Inward Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.InwardNumber, new { @class = "form-control form-control-sm", Value = ViewData["DocumentNo"], @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.InwardNumber, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Inward Date")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.InwardDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date" })
                    @Html.ValidationMessageFor(model => model.InwardDate, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("PO Number")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.DropDownList("PO_Id", (IEnumerable<SelectListItem>)ViewData["PONumberAndId"], "--Select--",
                   new { @class = "form-control", onchange = "SelectedIndexChanged($(this).val())" })
                    @Html.ValidationMessageFor(model => model.PO_Id, "", new { @class = "error mt-2 text-danger" })
                </div>
                @*<div class="col-md-2">
                        @Html.Label("PO Date")
                        <span style="color:red">*</span>
                    </div>
                    <div class="col-md-4">
                        @Html.TextBoxFor(model => model.PODate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date" })
                        @Html.ValidationMessageFor(model => model.PODate, "", new { @class = "error mt-2 text-danger" })
                    </div>*@
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Shipping Details")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextAreaFor(model => model.ShippingDetails, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ShippingDetails, "", new { @class = "error mt-2 text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Supplier Details")
                    <span style="color:red">*</span>
                </div>
                <div class="col-md-4">
                    @Html.TextAreaFor(model => model.SupplierDetails, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.SupplierDetails, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Item details")
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-striped" id="ItemTable">
                        <tr>
                            <th>Item</th>
                            <th>Code</th>
                            <th>Quantity</th>
                            <th>Tax</th>
                            <th>Unit Price</th>
                            <th>Delivered</th>
                            <th>Delivered Now (Kg)</th>
                            <th>Balance (Kg)</th>
                        </tr>
                    </table>
                </div>
            </div>
            <br />
            <div class="row">
                @*<div class="col-md-2">
                    @Html.Label("Signature")
                </div>
                <div class="col-md-4">
                    <input type="file" name="Signature" id="fileupload" class="file-drop-zone" onchange="return fileValidation()">
                    <span id="sfileupload" class="text-danger"></span>
                </div>*@
                <div class="col-md-2">
                    @Html.Label("Remarks")
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control form-control-sm" })
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "error mt-2 text-danger" })
                </div>
            </div>
            <br />
            <a href="@Url.Action("Index", "InwardNote")" class="btn btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                Back To List
            </a>
            <button type="submit" class="btn btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b);float:right;" onclick="SetInwardQty()">Save</button>
        </div>
    </div>
    @Html.TextBoxFor(model => model.InwardQuantities, new { style = "display:none" })
    @Html.TextBoxFor(model => model.BalanceQuantities, new { style = "display:none" })
}

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script src="~/Scripts/Script/AddInwardNote.js"></script>

@Html.Raw(TempData["Success"])