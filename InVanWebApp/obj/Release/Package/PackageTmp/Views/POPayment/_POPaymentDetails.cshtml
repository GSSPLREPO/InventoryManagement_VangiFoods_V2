@model InVanWebApp_BO.POPaymentBO
<style>
    .error {
        color: red;
        margin-left: 5px;
    }

    label.error {
        display: inline;
    }
</style>

@using (Html.BeginForm("AddPOPayment", "POPayment"))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.PurchaseOrderId)
    @Html.HiddenFor(model => model.PONumber)
    <hr />
    <div id="dvPaymentDetails">
        <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">INVOICE DETAILS</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-2">
                                <label>Vendor <span style="color:red">*</span></label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(x => x.VendorName, new { @class = "form-control form-control-sm", @placeholder = "Enter Vendor Name", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "error mt-2 text-danger" })
                                @Html.HiddenFor(x => x.VendorID)
                            </div>
                            <div class="col-md-2">
                                @Html.Label("Payment Date")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.PaymentDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date" })
                                @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                <label>Invoice Number <span style="color:red">*</span></label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(x => x.InvoiceNumber, new { @class = "form-control form-control-sm", @placeholder = "Enter Invoice Number" })
                                @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "error mt-2 text-danger" })
                            </div>
                            <div class="col-md-2">
                                <label>Invoice Amount <span style="color:red">*</span></label>

                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(x => x.PaymentAmount, new { @class = "form-control form-control-sm", @placeholder = "Enter Payment Amount" })
                                @Html.ValidationMessageFor(model => model.PaymentAmount, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-2">
                                <label>Payment Due Date <span style="color:red">*</span></label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.PaymentDueDate, "{0:yyyy-MM-dd}", new { @class = "form-control form-control-sm", type = "date" })
                                @Html.ValidationMessageFor(model => model.PaymentDueDate, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">ITEM DETAILS</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-sorter-wrapper col-lg-12 table-responsive">
                            <table class="table table-striped" id="submissionTable">
                                <thead>
                                    <tr>
                                        <th class="sortStyle">
                                            Item Name
                                        </th>
                                        <th class="sortStyle">
                                            Item Code
                                        </th>
                                        <th class="sortStyle">
                                            Quantity
                                        </th>
                                        <th class="sortStyle">
                                            Units
                                        </th>
                                        <th class="sortStyle">
                                            Unit Price
                                        </th>
                                        <th class="sortStyle">
                                            Tax
                                        </th>
                                        <th class="sortStyle">
                                            Total Payable (Before Tax)
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.PurchaseOrderItems)
                                    {
                                        <tr id="tablerow">
                                            <td>
                                                @Html.DisplayFor(x => item.ItemName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(x => item.Item_Code)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(x => item.ItemQuantity)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(x => item.ItemUnit)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(x => item.ItemUnitPrice)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(x=>item.ItemTaxValue)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(x => item.TotalItemCost)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">PAYMENT MODE</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("Payment Mode")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-8">
                                <select class="form-control" id="PaymentMode" name="PaymentMode">
                                    <option value="Cash">Cash</option>
                                    <option value="Cheque">Cheque</option>
                                    <option value="Online">Online</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        <div class="row" id="dvBankName" style="display:none;">
                            <div class="col-md-4">
                                @Html.Label("Bank Name")
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.BankName, new { @class = "form-control form-control-sm", @placeholder = "Enter Bank Name" })
                            </div>
                        </div>
                        <br />
                        <div class="row" id="dvCheque" style="display:none;">
                            <div class="col-md-4">
                                @Html.Label("Cheque Number")
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.ChequeNumber, new { @class = "form-control form-control-sm", @placeholder = "Enter Cheque Number" })
                            </div>
                        </div>
                        <div class="row" id="dvAccountNo" style="display:none;">
                            <div class="col-md-4">
                                @Html.Label("Account Number")
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.AccountNumber, new { @class = "form-control form-control-sm", @placeholder = "Enter Account Number" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 grid-margin stretch-card">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">PAYMENT DETAILS</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("Total PO Amount")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.TotalPOAmount, new { @class = "form-control form-control-sm", @placeholder = "Total PO Amount", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.TotalPOAmount, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        @*<br />*@
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("Advance Payment")
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.AdvancedPayment, new { @class = "form-control form-control-sm", @placeholder = "Advance payment", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.AdvancedPayment, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        @*<br />*@
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("Paid Amount")
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.AmountPaid, new { @class = "form-control form-control-sm", @placeholder = "Paid payment", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.AmountPaid, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        @*<br />*@
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("Payble Amount")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.TotalPaybleAmount, new { @class = "form-control form-control-sm", @placeholder = "Total Payble Amount", @onblur = "calculateBalancePay()" })
                                @Html.ValidationMessageFor(model => model.TotalPaybleAmount, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                        @*<br />*@
                        <div class="row">
                            <div class="col-md-4">
                                @Html.Label("Balance Amount")
                            </div>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.BalanceAmount, new { @class = "form-control form-control-sm", @placeholder = "Enter Balance Amount", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.BalanceAmount, "", new { @class = "error mt-2 text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title"></h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-2">
                                @Html.Label("Paid/Un Paid")
                                <span style="color:red">*</span>
                            </div>
                            <div class="col-md-4">
                                <select class="form-control" id="IsPaid" name="IsPaid">
                                    <option value="Paid">Paid</option>
                                    <option value="UnPaid">UnPaid</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.IsPaid, "", new { @class = "error mt-2 text-danger" })

                            </div>
                            <div class="col-md-2">
                                @Html.Label("Remarks")
                            </div>
                            <div class="col-md-4">
                                <input type="text" name="Remarks" class="form-control form-control-sm" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <a href="@Url.Action("Index", "POPayment")" class="btn btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                    Back To List
                </a>
                <button type="submit" class="btn btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b);float:right;">Submit</button>
            </div>
        </div>
    </div>
}

@Html.Raw(TempData["Success"])
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        var totalPayment = $('#TotalPOAmount').val();
        totalPayment = parseFloat(totalPayment);

        var AdvancePayment = $('#AdvancedPayment').val();
        AdvancePayment = parseFloat(AdvancePayment);

        var paybleAmount = $('#TotalPaybleAmount').val();
        paybleAmount = parseFloat(paybleAmount);

        var paidAmount = $('#AmountPaid').val();
        paidAmount = parseFloat(paidAmount);

        var balanceAmt = (totalPayment - (AdvancePayment + paidAmount)) - paybleAmount;
        $('#BalanceAmount').val(balanceAmt);

        $('#PaymentAmount').val(totalPayment);

        if (totalPayment == paidAmount) {
            alert('Payment is already completed for the selected PO number!');
            window.location.href = '/POPayment/AddPOPayment';
        }

    });

    $('#PaymentMode').change(function () {
        var mode = $('#PaymentMode option:selected').attr('value');
        if (mode == 'Cheque') {
            $('#dvBankName').show();
            $('#dvCheque').show();
            $('#dvAccountNo').hide();
        }
        else if (mode == 'Online') {
            $('#dvBankName').show();
            $('#dvCheque').hide();
            $('#dvAccountNo').show();
        }
        else {
            $('#dvBankName').hide();
            $('#dvCheque').hide();
            $('#dvAccountNo').hide();
        }
    });

    function calculateBalancePay() {
        var totalPayment = $('#TotalPOAmount').val();
        totalPayment = parseFloat(totalPayment);

        var AdvancePayment = $('#AdvancedPayment').val();
        AdvancePayment = parseFloat(AdvancePayment);

        var paybleAmount = $('#TotalPaybleAmount').val();
        paybleAmount = parseFloat(paybleAmount);

        var paidAmount = $('#AmountPaid').val();
        paidAmount = parseFloat(paidAmount);

        var balanceAmt = (totalPayment - (AdvancePayment+paidAmount)) - paybleAmount;
       
        if (paybleAmount > totalPayment || paybleAmount > (totalPayment - (AdvancePayment+paidAmount))) {
            alert('Please enter valid payable amount!');

            $('#TotalPaybleAmount').val('0');
            $('#TotalPaybleAmount').focus();
        }
        else {
            $('#BalanceAmount').val(balanceAmt);
        }

    }
</script>

<script>
    //$(document).ready(function () {
    //    $('#frmPaymentDetails').submit(function (e) {
    //        e.preventDefault();
    //        var VendorName = $('#VendorName').val();
    //        var InvoiceNumber = $('#InvoiceNumber').val();
    //        var PaymentDueDate = $('#PaymentDueDate').val();
    //        var PaymentAmount = $('#PaymentAmount').val();
    //        ////var paymentMode = $('#PaymentMode option:selected').attr('value');
    //        var TotalPOAmount = $('#TotalPOAmount').val();
    //        var TotalPaybleAmount = $('#TotalPaybleAmount').val();
    //        var BalanceAmount = $('#BalanceAmount').val();
    //        var PaymentDate = $('#PaymentDate').val();
    //        ////var IsPaid = $('#IsPaid option:selected').attr('value');
    //        $(".error").remove();

    //        if (VendorName.length < 1) {
    //            $('#VendorName').after('<span class="error">Enter Vendor Name!</span>');
    //        }
    //        if (InvoiceNumber.length < 1) {
    //            $('#InvoiceNumber').after('<span class="error">Enter Invoice Number!</span>');
    //        }
    //        if (PaymentDueDate.length < 1) {
    //            $('#PaymentDueDate').after('<span class="error">Select Payment Due Date!</span>');
    //        }
    //        if (PaymentAmount.length < 1) {
    //            $('#PaymentAmount').after('<span class="error">Enter Payment Amount!</span>');
    //        }

    //        //if (paymentMode.length < 1) {
    //        //    $('#PaymentMode').after('<span class="error">Select Payment Mode!</span>');
    //        //}

    //        //if (paymentMode == 'Cheque') {
    //        //    var BankName = $('#BankName').val();
    //        //    var ChequeNumber = $('#ChequeNumber').val();

    //        //    if (BankName.length < 1) {
    //        //        $('#BankName').after('<span class="error">Enter Bank Name!</span>');
    //        //    }
    //        //    if (ChequeNumber.length < 1) {
    //        //        $('#ChequeNumber').after('<span class="error">Enter Cheque Number!</span>');
    //        //    }
    //        //}
    //        //if (paymentMode == 'Online') {
    //        //    var BankName = $('#BankName').val();
    //        //    var AccountNumber = $('#AccountNumber').val();

    //        //    if (BankName.length < 1) {
    //        //        $('#BankName').after('<span class="error">Enter Bank Name!</span>');
    //        //    }
    //        //    if (AccountNumber.length < 1) {
    //        //        $('#AccountNumber').after('<span class="error">Enter Account Number Number!</span>');
    //        //    }
    //        //}

    //        if (TotalPOAmount.length < 1) {
    //            $('#TotalPOAmount').after('<span class="error">Enter Total PO Payment Amount!</span>');
    //        }
    //        if (TotalPaybleAmount.length < 1) {
    //            $('#TotalPaybleAmount').after('<span class="error">Enter Total Payable Amount!</span>');
    //        }
    //        if (BalanceAmount.length < 1) {
    //            $('#BalanceAmount').after('<span class="error">Enter Payment Amount!</span>');
    //        }
    //        if (PaymentDate.length < 1) {
    //            $('#PaymentDate').after('<span class="error">Enter Payment Amount!</span>');
    //        }
    //        //if (IsPaid.length < 1) {
    //        //    $('#IsPaid').after('<span class="error">Enter Payment Amount!</span>');
    //        //}
    //    });
    //});
</script>