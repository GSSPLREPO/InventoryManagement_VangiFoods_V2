@model InVanWebApp_BO.RecipeMasterBO
@{
    ViewBag.Title = "EditRecipeItem";
    Layout = "~/Views/Shared/MainMaster.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            <h4>Edit Recipe Item</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.RecipeID)

        <div class="row">
            <div class="col-md-2">
                @Html.Label("Recipe Item Name")
                <span style="color:red">*</span>
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.RecipeName, new { @class = "form-control form-control-sm", maxlength = "40" })
                @Html.ValidationMessageFor(model => model.RecipeName, "", new { @class = "error mt-2 text-danger", id = "validationMsgName" })
            </div>
            <div class="col-md-2">
                @Html.Label("Description")
                <span style="color:red">*</span>
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.Description, new { @class = "form-control form-control-sm", maxlength = "150" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "error mt-2 text-danger", id = "validationMsgCode" })
            </div>
        </div>
            <br />
            <a href="@Url.Action("Index", "ProductionRecipe")" class="btn btn-sm btn-primary" style="background: linear-gradient(85deg, #392c70, #6a005b); float: right;">
                Back To List
            </a>
            <button id="btnSave" type="submit" class="btn btn-sm btn-primary mr-2" style="background: linear-gradient(85deg, #392c70, #6a005b);float:right;">Update</button>

        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script type="text/javascript">

    //Validation for special characters.
    $('#RecipeName').on("keydown keyup change", function () {
        var maxLength = 40;
        var $th = $(this);
        $th.val($th.val().replace(/[^a-zA-Z0-9\d\-_\s]/g,
            function (str) {
                $('#validationMsgName').text('Special caracters not allowed!');
                $('#validationMsgName').show();
                return '';
            }));

        if (($('#RecipeName').val().length) > maxLength) {
            $('#validationMsgName').show();
            $('#validationMsgName').text('Length is exceeding!');
            //return false;
        }
        else
            $('#validationMsgName').hide();
    });

    //Validation for special characters.
    $('#Description').on("keydown keyup change", function () {
        var maxLength = 20;
        var $th = $(this);
        $th.val($th.val().replace(/[^a-zA-Z0-9\d\-_\s]/g,
            function (str) {
                $('#validationMsgCode').text('Special caracters not allowed!');
                $('#validationMsgCode').show();
                return '';
            }));

        if (($('#Description').val().length) > maxLength) {
            $('#validationMsgCode').show();
            $('#validationMsgCode').text('Length is exceeding!');
            //return false;
        }
        else
            $('#validationMsgCode').hide();
    });

    function isNumberKey(evt) {
        //comparing pressed keycodes
        var keycode = (evt.which) ? evt.which : evt.keyCode;
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
        else {
            var parts = evt.srcElement.value.split('.');
            if (parts.length > 1 && keycode == 46)
                return false;
            else
                return true;
        }
        return true;
    }
</script>


