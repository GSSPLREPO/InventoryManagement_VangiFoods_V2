@model InVanWebApp_BO.RequestForQuotationBO
@{
    ViewBag.Title = "Punch Quotation";
    Layout = "";
}

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Punch Quotation</title>
    <style>
        html2canvas-container {
            width: 3000px !important;
            height: 2000px !important;
        }
    </style>
</head>
<body>
    @Html.HiddenFor(model => model.RequestForQuotationId)

    @using (Html.BeginForm())
    {

        @Html.AntiForgeryToken()


        <div class="container-fluid p-0">

            <div class="row">
                <div class="col-lg-12">
                    @*Card start*@
                    <div class="card text-center">
                        @*<div class="card-header">
                                <a class="nav-link" href="#!">Punch Quotation</a>
                            </div>*@
                        <div class="card-body">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="row">
                                        <div class="table-sorter-wrapper col-lg-12 table-responsive">
                                            <table class="table table-hover table-sm" id="submissionTable" style="table-layout: fixed;">
                                                <thead>
                                                    <tr>
                                                        <th class="text-left">
                                                            Description
                                                        </th>
                                                        @{
                                                            int c1 = 1;
                                                            while (c1 <= Model.vendorIdLength)
                                                            {
                                                                <th id="tableHeader_@c1" class="text-left text-wrap">
                                                                    <span><label id="CompanyName_@c1"></label></span>
                                                                    <span class="d-none"><label id="VendorsID_@c1"></label></span>
                                                                </th>

                                                                { c1++; }
                                                            }
                                                        }

                                                    </tr>
                                                </thead>
                                                <tbody id="myTableBody">
                                                    @{ int c = 1;
                                                        foreach (var item in Model.itemDetails)
                                                        {
                                                            @*<tr id="tablerow_@c" class="d-inline-flex flex-nowrap">*@
                                                            <tr id="tablerow_@c">
                                                                <td class="text-left text-wrap">
                                                                    <label>Item Code:</label>
                                                                    @Html.DisplayFor(x => item.Item_Code)<br />
                                                                    <label>Item Name: </label>
                                                                    @Html.DisplayFor(x => item.ItemName)<br />
                                                                    <label>Requested Quantity: </label>
                                                                    @Html.DisplayFor(x => item.ItemQuantity)
                                                                </td>

                                                                @{
                                                                    int c2 = 1;
                                                                    while (c2 <= Model.vendorIdLength)
                                                                    {
                                                                        <td class="text-left text-wrap">
                                                                            <label>Quoted Quantity: </label>
                                                                            @Html.DisplayFor(x => item.ItemQuantity) @Html.DisplayFor(x => item.ItemUnit)<br />

                                                                            <label>Price: </label>
                                                                            <span id="UnitPrice_@c2@c">0</span>
                                                                            @Html.DisplayFor(modal => modal.CurrencyName)<br />

                                                                            <label>Amount: </label>
                                                                            <span id="TotalItemCost_@c2@c">0</span>
                                                                            @Html.DisplayFor(modal => modal.CurrencyName)<br />

                                                                            <label>Comment: </label>
                                                                            <span id="Remarks_@c2@c"></span>
                                                                        </td>

                                                                        { c2++; }
                                                                    }

                                                                }


                                                            </tr>


                                                            { c++; }
                                                        }
                                                        @Html.Hidden("ItemCount", Model.itemDetails.Count())
                                                        <tr>
                                                            <td></td>
                                                            @{
                                                                int c3 = 1;
                                                                while (c3 <= Model.vendorIdLength)
                                                                {
                                                                    <td class="text-left">
                                                                        <button type="button" class="text-wrap btn btn-sm btn-link btn-pq text-dark" style="background-color:transparent"
                                                                                id="BtnPunchQuot_@c3" onclick="RFQSupplierDetails(this.id,@Model.RequestForQuotationId)">
                                                                            <i class="fa fa-reply me-1 text-dark" aria-hidden="true"></i>Punch Quotation
                                                                        </button>
                                                                    </td>
                                                                    { c3++; }
                                                                }
                                                            }
                                                        </tr>

                                                        <tr>
                                                            <td></td>
                                                            @{
                                                                int c4 = 1;
                                                                while (c4 <= Model.vendorIdLength)
                                                                {
                                                                    if (Model.countQuotation > 0)
                                                                    {
                                                                        <td class="text-left">
                                                                            <button id="BtnPunchQuotView_@c4" onclick="redirectToView(this.id,@Model.RequestForQuotationId)" class="btn btn-primary btn-sm" style="background: linear-gradient(85deg, #392c70, #6a005b);">View</button>
                                                                            @*<a id="BtnPunchQuotView_@c4" href="@Url.Action("ViewRFQSupplierDetails","RequestForQuotation",new { ID = c4,RfqID=Model.RequestForQuotationId })" class="btn btn-primary btn-sm" style="background: linear-gradient(85deg, #392c70, #6a005b);">View</a>*@
                                                                        </td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td class="text-left">
                                                                            <a id="BtnPunchQuotView_@c4" href="#" class="btn btn-primary btn-sm" style="background: linear-gradient(85deg, #392c70, #6a005b);display:none;">View</a>
                                                                        </td>
                                                                    }
                                                                    { c4++; }
                                                                }
                                                            }
                                                        </tr>
                                                    }

                                                </tbody>
                                            </table>
                                            @*Model Started*@
                                            <div class="modal fade" id="myModal" role="dialog" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
                                                <div class="modal-dialog modal-xl" role="document">

                                                    <!-- Modal content-->
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h4 class="modal-title" id="myModalLabel" style="color:darkcyan">RFQ Supplier wise Details</h4>
                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                <span aria-hidden="true">&times;</span>
                                                            </button>
                                                        </div>
                                                        <div class="modal-body" id="punchQuotation">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            @*Model end*@
                                        </div>
                                    </div>
                                    <br />
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.TxtItemDetails, new { style = "display:none" })
                                </div>
                            </div>


                        </div>
                    </div>
                    @*Card end*@
                </div>
            </div>

        </div>


    }
</body>
</html>
@Html.Raw(TempData["Success"])
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@*<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>*@
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<script src="~/Scripts/bootstrap.min.js"></script>

@*<script src="~/Theme/MainContent/js/jquery.min.js"></script>*@

<script type="text/javascript">
    $(document).ready(function () {
        var id = $("#RequestForQuotationId").val();
        CompanyName(id);

    });

    function CompanyName(id) {
        //alert(id, " Company Name func called!")
        $.ajax({
            type: "POST",
            url: `/RequestForQuotation/BindCompanyName?id=` + id,
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                const myObj = result;
                var myJSON = JSON.stringify(myObj);
                localStorage.setItem("testJSON", myJSON);

                for (var i = 0 in myObj) {
                    i = parseFloat(i);
                    $("#CompanyName_" + (i + 1)).text(myObj[i].CompanyName);
                    $("#VendorsID_" + (i + 1)).text(myObj[i].VendorsID);
                    var vendorId = myObj[i].VendorsID;
                    setItemPrice(vendorId, (i + 1), id);
                }
                //console.log(tempArray);
            },
            error: function (data) {
                alert("Bind Company details failed!");
                Success = false;
            }
        });
    }

    //============The below function is for redirecting the user to new tab on-click of View in RFQ Summary modal.===========//
    function redirectToView(ID, RequestForQuotationId) {
        var rowNo = ID.split('_')[1];
        var VendorsID = $("#VendorsID_" + rowNo).text();
        window.open("RequestForQuotation/ViewRFQSupplierDetails?ID=" + VendorsID + "&RfqID=" + RequestForQuotationId, '_blank');
        event.preventDefault();
        return;
    }
    //=========================================================End===================================================================//

    var tempArray = []; //This variable is used for marking the low quoted price among all vendors.

    function setItemPrice(vendorId, i, rfqId) {
        $.ajax({
            type: "POST",
            url: `/RequestForQuotation/FetchItemDetailsVendorWise?id=` + vendorId+"&RFQId="+rfqId,
            data: "{}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result != null) {

                    var UnitPrice = 0;
                    var TotalItemPrice = 0;
                    var Remarks = '';
                    for (var j = 0; j < result.rfqVendorItemDetails.length; j++) {
                        UnitPrice = result.rfqVendorItemDetails[j].ItemUnitPrice;
                        if (UnitPrice == '' && UnitPrice == null)
                            UnitPrice = 0;

                        TotalItemPrice = result.rfqVendorItemDetails[j].TotalItemCost;
                        if (TotalItemPrice == '' && TotalItemPrice == null)
                            TotalItemPrice = 0;

                        Remarks = result.rfqVendorItemDetails[j].Remarks;
                        if (Remarks == '' && Remarks == null)
                            Remarks = '';

                        $("#UnitPrice_" + i + (j + 1)).text(UnitPrice);
                        $("#TotalItemCost_" + i + (j + 1)).text(TotalItemPrice);
                        $("#Remarks_" + i + (j + 1)).text(Remarks);

                        tempArray.push([result.rfqVendorItemDetails[j].Item_ID, UnitPrice, "UnitPrice_" + i + (j + 1)]);
                    }
                }
            },
            error: function (data) {
                //alert("Failed to bind item details vendor wise!");
                //Success = false;
            }
        });
    }

    function RFQSupplierDetails(ID, RequestForQuotationId) {
        var rowNo = ID.split('_')[1];
        var VendorsID = $("#VendorsID_" + rowNo).text();

        $.get("@Url.Action("AddRFQSupplierDetails", "RequestForQuotation")?RequestForQuotationId="+RequestForQuotationId+"&VendorsID="+VendorsID

            , function (data) {
                $('#modelRFQ').html(data);
                  //$('.modal-body').html(data);
            });

            $("#myModal").modal("show");
            $("#myModal").addClass("show");

            $('#myModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget) // Button that triggered the modal
                var recipient = button.data('whatever') // Extract info from data-* attributes
                //// If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                //// Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                var modal = $(this)
                //modal.find('.modal-body input').val(recipient)
                modal.find('#modelRFQ input').val(recipient)
            });
    }

    //==================/Function of RFQSupplierDetails modal/////////////=============================

    function isNumberKey(evt) {
        var keycode = (evt.which) ? evt.which : evt.keyCode;
        if (!(keycode == 8 || keycode == 46) && (keycode < 48 || keycode > 57)) {
            return false;
        }
        else {
            var parts = evt.srcElement.value.split('.');
            if (parts.length > 1 && keycode == 46)
                return false;
            else
                return true;
        }
        return true;
    }

    //change on price call functiion
    function changeItemUnitPrice(value, id) {
        $('#btnSave').prop('disabled', false);
        CalItemTotalPrice(value, id);
    };

    function CalItemTotalPrice(value, id) {
        var temp_rowNo = id.split('_');
        var rowNo = temp_rowNo[1];
        if (value == '')
            value = 0;

        value = parseFloat(value);
        if (value != 0) {
            var price = $("#ItemUnitPrice_" + rowNo).val();
            if (price == '')
                price = 0;
            price = parseFloat(price);

            var quantity = $("#Quantity_" + rowNo).val();
            if (quantity == '')
                quantity = 0;
            quantity = parseFloat(quantity);

            var tempTax = $("#itemTax_" + rowNo).val();
            if (tempTax == '')
                tempTax = 0;

            var totalPrice = price * quantity;
            totalPrice = Math.round(totalPrice);
            $("#totalItemCost_" + rowNo).val(totalPrice);
        }
        else
            $("#totalItemCost_" + rowNo).val(0);

        CalculateTotalBeforeTax();
    }

    //changeItemTax
    function changeItemTax(value, id) {
        //CalItemTotalPrice(value, id);
        CalculateTotalBeforeTax();
    }

    function CalculateTotalBeforeTax() {
        $('#TotalBeforeTax').val('');
        $('#TotalTax').val('');
        var length = document.getElementById("submissionTable").rows.length;
        length = parseFloat(length) - 1;
        var total = 0;
        var totalTax = 0;
        var i = 1;
        while (i <= length) {
            var temp = document.getElementById("totalItemCost_" + i).value;
            var tempTotalTax = document.getElementById("itemTax_" + i).value;
            if (temp == '')
                temp = 0;
            if (tempTotalTax == '')
                tempTotalTax = 0;

            total = parseFloat(temp) + total;

            tempTotalTax = Math.round((parseFloat(tempTotalTax) / 100) * parseFloat(temp));
            totalTax = parseFloat(tempTotalTax) + totalTax;
            i++;
        }
        total = Math.round(total);
        totalTax = Math.round(totalTax);

        $('#TotalBeforeTax').val(total);
        $('#TotalTax').val(totalTax);
        var tempGrandTotal = total + totalTax;
        $('#TotalAfterTax').val(tempGrandTotal);
        $('#GrandTotal').val(tempGrandTotal);

        createJson();
    }

    //==================Set value in txtItemDetails onCick of Save/Update button======--------
    function SaveBtnClick() {
        var table = document.getElementById('submissionTable');
        var rowCount = table.rows.length;

        var i = 1, flag = 0;
        while (i < rowCount) {
            var itemUnitPrice = $('#ItemUnitPrice_' + i).val();
            if (itemUnitPrice == '' || itemUnitPrice == null) {
                itemUnitPrice = 0;
            }
            else
                itemUnitPrice = parseFloat(itemUnitPrice);

            if (itemUnitPrice == 0) {
                flag = 1;
                break;
            }
            i++;
        }

        if (flag == 1) {
            alert("Item Unit Price is zero or null! Cannot create RFQ Supplier Details!");
            $('#btnSave').prop('disabled', true);
            event.preventDefault();
            return;
        }
        else {
            $('#btnSave').prop('disabled', false);
        }

        createJson();
    };

    //==========end===============

    function createJson() {
        let res = [...document.getElementById("myTableBody").children].map(tr =>
            Object.fromEntries([...tr.querySelectorAll("input,select")].map(el =>
                [el.name, el.value])));
       // console.log(res);
        var TxtItemDetails = JSON.stringify(res);
        //console.log(TxtItemDetails);
        $('#TxtItemDetails').val(TxtItemDetails);
    }


</script>

<style>
    button.btn-pq {
        background-color: #ff9800 !important;
        border-color: #ff9800 !important;
    }
</style>
