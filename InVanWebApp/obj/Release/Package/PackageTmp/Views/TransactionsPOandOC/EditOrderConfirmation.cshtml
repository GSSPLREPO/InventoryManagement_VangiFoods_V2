@model InVanWebApp.DAL.PurchaseOrder
@{
    ViewBag.Title = "Edit Sales Order";
    Layout = "~/Views/Shared/MainMaster.cshtml";

}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @*<div class="form-horizontal">*@
    <h4 class="card-title">Edit Sales Order</h4>

    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.PurchaseOrderId)

    <div class="row">
        <div class="col-md-12  grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title" style="color:darkcyan">Primary Document Details</h4>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.Label("Company Name")
                            @Html.TextBoxFor(model => model.Tittle, new { @class = "form-control", maxlength = "50" })
                            @Html.ValidationMessageFor(model => model.Tittle, "", new { @class = "error mt-2 text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.Label("PO Number")
                            @Html.TextBoxFor(model => model.PONumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PONumber, "", new { @class = "error mt-2 text-danger" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.Label("Sales Order Number")
                            @Html.TextBoxFor(model => model.DocumentNumber, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.DocumentNumber, "", new { @class = "error mt-2 text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.Label("Document Created Date")
                            @*<div id="datepicker-popup" class="input-group date datepicker">
                                    @Html.TextBoxFor(model => model.DocumentDate, new { @class = "form-control"})
                                    <span class="input-group-addon input-group-append border-left">
                                        <span class="far fa-calendar input-group-text"></span>
                                    </span>
                                </div>*@

                            @Html.TextBoxFor(model => model.DocumentDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(model => model.DocumentDate, "", new { @class = "error mt-2 text-danger" })
                        </div>
                    </div>

                    <dv class="row">
                        <div class="col-md-6 form-group">
                            @Html.Label("Delivery Date")
                            @*<div id="datepicker-popup1" class="input-group date datepicker">
                                    @Html.TextBoxFor(model => model.DeliveryDate, new { @class = "form-control"})
                                    <span class="input-group-addon input-group-append border-left">
                                        <span class="far fa-calendar input-group-text"></span>
                                    </span>
                                </div>*@
                            @Html.TextBoxFor(model => model.DeliveryDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "error mt-2 text-danger" })
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.Label("Amendment")
                            @Html.TextBoxFor(model => model.Amendment, new { @class = "form-control", @readonly = "readonly", @Value = "0" })
                            @Html.ValidationMessageFor(model => model.Amendment, "", new { @class = "error mt-2 text-danger" })
                        </div>
                    </dv>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.Label("Work Order Number")
                            @Html.TextBoxFor(model => model.WorkOrderNo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.WorkOrderNo, "", new { @class = "error mt-2 text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title" style="color:darkcyan">Buyers Details</h4>
                    <hr />
                    <div class="form-group">
                        @Html.TextAreaFor(model => model.BuyerAddress, new { @class = "form-control", placeholder = "Buyers address", style = "height:100px" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title" style="color:darkcyan">Supplier Details</h4>
                    <hr />
                    <div class="form-group">
                        @Html.TextAreaFor(model => model.SupplierAddress, new { @class = "form-control", placeholder = "Supplier address", style = "height:100px" })
                        @*<textarea id="SupplierAddress" name="SupplierAddress" class="form-control" style="height:100px;"></textarea>*@
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <div class="form-group">
                        <div class="row">
                            <div class="table-sorter-wrapper col-lg-12 table-responsive">
                                <table class="table table-striped" id="submissionTable">
                                    <thead>
                                        <tr>
                                            <th class="sortStyle">
                                                Item Code
                                                <i class="fa fa-angle-down"></i>
                                            </th>
                                            <th class="sortStyle">
                                                Item Description
                                                <i class="fa fa-angle-down"></i>
                                            </th>
                                            <th class="sortStyle">
                                                Quantity
                                                <i class="fa fa-angle-down"></i>
                                            </th>
                                            <th class="sortStyle">
                                                Units
                                                <i class="fa fa-angle-down"></i>
                                            </th>
                                            <th class="sortStyle">
                                                Price
                                                <i class="fa fa-angle-down"></i>
                                            </th>
                                            <th class="sortStyle">
                                                Tax
                                                <i class="fa fa-angle-down"></i>
                                            </th>
                                            <th class="sortStyle">
                                                Total before tax
                                                <i class="fa fa-angle-down"></i>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr id="tablerow0">
                                            <td>
                                                @Html.DropDownList("Item_ID", (IEnumerable<SelectListItem>)ViewData["itemListForDD"], "--Select Item--", new { @class = "form-control", style = "height:30px;width:100px;" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(model => model.ItemDescription, "", new { @class = "form-control", style = "height:30px;width:200px;", id = "ItemDescription" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(model => model.ItemQuantity, new { @class = "form-control", style = "height:30px;width:100px;" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(model => model.ItemUnit, "", new { @class = "form-control", style = "height:30px;width:100px;", id = "ItemUnit" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(model => model.ItemPrice, "", new { @class = "form-control", style = "height:30px;width:100px;", id = "ItemPrice" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(model => model.ItemTax, "", new { @class = "form-control", style = "height:30px;width:80px;", id = "ItemTax" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(model => model.TotalItemCost, "", new { @class = "form-control", id = "ItemTotalPrice", style = "height:30px;width:200px;" })
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-primary" onclick="removeTr(0);">Delete</button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <button type="button" class="btn btn-info shadow" id="AddItem">
                                + Add Item
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title" style="color:darkcyan">Attach Signature</h4>
                    <hr />
                    @*<input type="file" name="img[]" class="file-upload-default" style="visibility:hidden;position:absolute;">
                        <div class="input-group col-xs-12">
                            <input type="text" class="form-control file-upload-info" disabled placeholder="Upload Signature" />
                            <span class="input-group-append">
                                <button type="button" class="file-upload-browse btn btn-primary">Attach</button>
                            </span>
                        </div>*@

                    @*@Html.TextBoxFor(model => model.Signature,"",new { @class="form-control",id="file",type="file",onchange= "return fileValidation()"})*@
                    <br />
                    <input type="file" id="file" name="Signature"
                           onchange="return fileValidation()" />

                    <!-- Image preview -->
                    <br />
                    <br />
                    <center>
                        <div id="imagePreview"></div>
                    </center>

                </div>
            </div>
        </div>

        <div class="col-md-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <hr />
                    <div class="form-group">
                        <div class="row">
                            <label>Total (before tax): </label>
                            @Html.TextBoxFor(model => model.TotalItemCost, "", new { @class = "form-control", id = "TotalBeforeTax" })
                            @*<input class="form-control" id="TotalBeforeTax" name="TotalItemCost" />*@
                        </div>
                        <div class="row">
                            <label>Total tax: </label>
                            @Html.TextBoxFor(model => model.Tax, "", new { @class = "form-control", id = "TotalTax" })
                            @*<input class="form-control" id="TotalTax" name="Tax" />*@
                        </div>
                        <div class="row">
                            <label>Total (after tax):</label>
                            @Html.TextBoxFor(model => model.GrandTotal, "", new { @class = "form-control", id = "TotalAfterTax" })
                            @*<input class="form-control" id="TotalAfterTax" name="GrandTotal" />*@
                        </div>
                        <div class="row">
                            <label><b>Grand Total:</b></label>
                            @Html.TextBoxFor(model => model.GrandTotal, "", new { @class = "form-control" })
                        </div>
                        <div class="row">
                            <label>Advanced To Pay:</label>
                            @Html.TextBoxFor(model => model.AdvancedPAyment, "", new { @class = "form-control" })
                        </div>
                    </div>
                    <br />
                    <button type="submit" id="btn_SaveDraft" class="btn btn-lissght">Save Draft</button>
                    <button type="submit" class="btn btn-primary mr-2">Save</button>
                    @Html.ActionLink("Back to List", "Index", new { @class = "font-weight-light" })
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.DraftFlag, new { @Value = "false" })
    @*<input type="hidden" id="DraftFlag" name="@Html.NameFor(model => model.DraftFlag)" value="0" />*@

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.4.1.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>

<script type="text/javascript">
    var counter = 1;
    $(document).ready(function () {

        //Dropdownlist Selectedchange event
        $("#Item_ID").change(function () {
            $("#ItemDescription").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetitemDetails")', // we are calling json method

                dataType: 'json',

                data: { id: $("#Item_ID").val() },
                // here we are get value of selected country and passing same value
                //as inputto json method GetStates.

                success: function (itemDescription) {
                    // states contains the JSON formatted list
                    // of states passed from the controller
                    var description = JSON.stringify(itemDescription);
                   // var item = description.split("#");
                    //alert('hh' + itemDescription.Item_Name + "  " +itemDescription.UnitName+" "+itemDescription.Price);
                    $("#ItemDescription").val(itemDescription.Item_Name);
                    $("#ItemUnit").val(itemDescription.UnitName);
                    $("#ItemPrice").val(itemDescription.Price);
                    $("#ItemTax").val(itemDescription.Tax);
                    $("#ItemQuantity").val('0');

                    $("#ItemTotalPrice").val('');
                    $("#TotalBeforeTax").val('');
                    $("#TotalTax").val('');
                    $("#TotalAfterTax").val('');
                    $("#GrandTotal").val('');
                    $("#AdvancedPAyment").val('');
                },
                failure: function () {
                    alert('Failed to retrieved item detals!');
                },
                error: function (ex) {
                    alert('Failed to retrieve Item description.' + ex);
                }
            });
        });

        $("#AddItem").click(function () {
            //'<select id="ItemID" class="form-control" name="ItemID[' + counter + ']" required="required" /><optio >--Select Item--</option></select>' +
            var nameItem = "ItemID['" + counter + "']";
            $('<tr id="tablerow' + counter + '"><td>' +
                //'<select id="ItemID" class="form-control" style = "height:30px;width:100px;" name="ItemID[' + counter + ']" required="required" /></select>' +
                '<input type="text" id="ItemID" class="form-control" style = "height:30px;width:100px;" name="ItemID[' + counter + ']" value="" required="required" />' +
                '</td>' +
                '<td>' +
                '<input type="text" id="ItemDescription" class="form-control" style = "height:30px;width:200px;" name="ItemDescription[' + counter + ']" value="" required="required" />' +
                '</td>' +
                '<td>' +
                '<input type="text" id="ItemQuantity" class="form-control" style = "height:30px;width:100px;" name="ItemQuantity[' + counter + ']" value="0" required="required" />' +
                '</td>' +
                '<td>' +
                '<input type="text" id="ItemUnit" class="form-control" style = "height:30px;width:100px;" name="ItemUnit[' + counter + ']" value="" required="required" />' +
                '</td>' +
                '<td>' +
                '<input type="text" id="ItemPrice" class="form-control" style = "height:30px;width:100px;" name="ItemPrice[' + counter + ']" value="" required="required" />' +
                '</td>' +
                '<td>' +
                '<input type="text" id="ItemTax" class="form-control" style = "height:30px;width:80px;" name="ItemTax[' + counter + ']" value="" required="required" />' +
                '</td>' +
                '<td>' +
                '<input type="text" id="ItemTax" class="form-control" style = "height:30px;width:200px;" name="TotalItemCost[' + counter + ']" value="" required="required" />' +
                '</td>' +
                '<td>' +
                '<button type="button" class="btn btn-primary" onclick="removeTr(' + counter + ');">Delete</button>' +
                '</td>' +
                '</tr>').appendTo('#submissionTable');

            counter++;
            return false;
        });

        $("#ItemQuantity").change(function () {
            var quantity = $("#ItemQuantity").val();
            var price = $("#ItemPrice").val();
            var tempTax = $("#ItemTax").val().split("%")
            var tax = tempTax[0];

            //Set total price in item grid.
            var totalPrice = quantity * price;
            $("#ItemTotalPrice").val(totalPrice);
            //Set values in Bill
            var totalPriceAfterTax = (totalPrice) + ((totalPrice * tax) / 100);
            //console.log("quan:" + quantity + ",totalprice:" + totalPrice + ",tax:" + tax + ",TPAT:" + totalPriceAfterTax);
            $("#TotalBeforeTax").val(totalPrice);
            $("#TotalTax").val($("#ItemTax").val());
            $("#TotalAfterTax").val(totalPriceAfterTax);
            $("#GrandTotal").val(totalPriceAfterTax);
        });
    });

    function removeTr(index) {
        if (counter > 1) {
            $('#tablerow' + index).remove();
            counter--;
        }
        return false;
    }

    function fileValidation() {
        var fileInput =
            document.getElementById('file');

        var filePath = fileInput.value;
        console.log(fileInput.value);

        // Allowing file type
        var allowedExtensions =
            /(\.jpg|\.jpeg|\.png)$/i;

        if (!allowedExtensions.exec(filePath)) {
            alert('Invalid file type');
            fileInput.value = '';
            return false;
        }
        else {

            // Image preview
            if (fileInput.files && fileInput.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById(
                        'imagePreview').innerHTML =
                        '<img src="' + e.target.result
                        + '" style="height:50%;width:50%" />';
                };

                reader.readAsDataURL(fileInput.files[0]);
            }
        }
    }

    $("#btn_SaveDraft").click(function () {
        $("#DraftFlag").val('true');
        //var ab=$("#DraftFlag").val();
        //console.log("abc:" + ab);
    });

</script>